

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Lemon</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2025-04-30T17:19:28+08:00</updated>
  <author>
    <name>lemon</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2025 lemon </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>GaussDB的窗口函数</title>
    <link href="http://localhost:4000/posts/chuangkou-hanshu/" rel="alternate" type="text/html" title="GaussDB的窗口函数" />
    <published>2025-04-16T08:47:00+08:00</published>
  
    <updated>2025-04-16T08:47:00+08:00</updated>
  
    <id>http://localhost:4000/posts/chuangkou-hanshu/</id>
    <content src="http://localhost:4000/posts/chuangkou-hanshu/" />
    <author>
      <name>Lemon</name>
    </author>

  
    
    <category term="Knowledge" />
    
    <category term="GaussDB" />
    
  

  
    <summary>
      





      窗口函数（Window Function）是GaussDB这类关系型数据库中强大的工具，它能对查询结果集的一个子集（窗口）进行计算，在分析数据时极为有用。

一、基本语法

function_name(arg1, arg2, ...) OVER (
    [PARTITION BY partition_expression1, partition_expression2, ...]
    [ORDER BY sort_expression1 [ASC | DESC], sort_expression2 [ASC | DESC], ...]
    [frame_clause]
)



  function_name：窗口函数的名称，像SUM、AVG、ROW_NUMBER等。
  OVER：这是窗口函数的标志，用于定义窗口。
  PARTITION BY：把结果集划分成多个分区，...
    </summary>
  

  </entry>

  
  <entry>
    <title>GaussDB的with子句</title>
    <link href="http://localhost:4000/posts/cte/" rel="alternate" type="text/html" title="GaussDB的with子句" />
    <published>2025-04-15T09:47:00+08:00</published>
  
    <updated>2025-04-15T09:47:00+08:00</updated>
  
    <id>http://localhost:4000/posts/cte/</id>
    <content src="http://localhost:4000/posts/cte/" />
    <author>
      <name>Lemon</name>
    </author>

  
    
    <category term="Knowledge" />
    
    <category term="GaussDB" />
    
  

  
    <summary>
      





      with子句在GaussDB（基于PostgreSQL内核）里也被称作公共表表达式（CTE），它能定义临时的命名结果集，在查询里可以多次引用这些结果集。CTE 能够让复杂的查询更易读、易维护，并且在某些情况下还能提升查询性能。

-- 定义一个名为dept_employee_count的CTE
WITH dept_employee_count AS (
    SELECT 
        department_id,
        COUNT(employee_id) AS employee_count
    FROM 
        employees
    GROUP BY 
        department_id
)
-- 主查询，将CTE与departments表连接
SELECT 
    d.department_name,
    dec.employe...
    </summary>
  

  </entry>

  
  <entry>
    <title>GaussDB将JSON字符串转为对象并取某个字段的值</title>
    <link href="http://localhost:4000/posts/chaxun-json-ziduan/" rel="alternate" type="text/html" title="GaussDB将JSON字符串转为对象并取某个字段的值" />
    <published>2025-03-31T13:47:00+08:00</published>
  
    <updated>2025-03-31T13:47:00+08:00</updated>
  
    <id>http://localhost:4000/posts/chaxun-json-ziduan/</id>
    <content src="http://localhost:4000/posts/chaxun-json-ziduan/" />
    <author>
      <name>Lemon</name>
    </author>

  
    
    <category term="Knowledge" />
    
    <category term="GaussDB" />
    
  

  
    <summary>
      





      select jsonb_extract_path_text(json_param::jsonb, 'param_a') as param_a from json_test_table;


    </summary>
  

  </entry>

  
  <entry>
    <title>给路由器刷第三方固件</title>
    <link href="http://localhost:4000/posts/luyouqi-shua-xitong/" rel="alternate" type="text/html" title="给路由器刷第三方固件" />
    <published>2025-03-31T13:47:00+08:00</published>
  
    <updated>2025-03-31T13:47:00+08:00</updated>
  
    <id>http://localhost:4000/posts/luyouqi-shua-xitong/</id>
    <content src="http://localhost:4000/posts/luyouqi-shua-xitong/" />
    <author>
      <name>Lemon</name>
    </author>

  
    
    <category term="Collection" />
    
    <category term="Technical" />
    
  

  
    <summary>
      





      固件下载地址

Bread下载：https://breed.hackpascal.net/
潘多拉固件下载：http://downloads.pangubox.com:6380/pandorabox/18.10/targets/ralink/mt7620/
OpenWrt下载：https://downloads.openwrt.org/
小米路由器固件下载：https://www.miwifi.com/miwifi_download.html

教程

网件路由器R6220刷不死breed的教程：https://jingyan.baidu.com/article/09ea3eded82eb581afde390b.html
网件r6220如何刷潘多拉固件：https://jingyan.baidu.com/article/09ea3eded813b581afde3936.html
小米...
    </summary>
  

  </entry>

  
  <entry>
    <title>Java实体类模型</title>
    <link href="http://localhost:4000/posts/java-shitilei-moxing/" rel="alternate" type="text/html" title="Java实体类模型" />
    <published>2025-02-27T13:47:00+08:00</published>
  
    <updated>2025-02-27T13:47:00+08:00</updated>
  
    <id>http://localhost:4000/posts/java-shitilei-moxing/</id>
    <content src="http://localhost:4000/posts/java-shitilei-moxing/" />
    <author>
      <name>Lemon</name>
    </author>

  
    
    <category term="Knowledge" />
    
    <category term="Java" />
    
  

  
    <summary>
      





      一、核心概念解析

  POJO：即普通Java对象，没有业务逻辑，包含DO、DTO、BO、VO和PO等，遵守简单对象概念，比JavaBean更纯净。有private参数及对应的get和set方法，不继承、不实现接口且未被框架侵入。
  VO：视图模型，用于展示层，将指定页面或组件的数据封装起来，实现后台向前端传输数据，在业务不复杂系统中可直接用DTO替代。
  DTO：数据传输对象，在后端是Java对象，前端是js对象（类似json）。用于前端向后端传输数据，在满足能完整表达业务模块输出的情况下，也可用于服务间调用，它没有行为，仅存储和提供数据查询。
  Entity/PO：持久化对象，等同于Entity，对应数据库表中的记录，属性与表字段一一对应，数量与数据库表数量相关，除get、set方法外一般无其他方法。
  DO：领域对象，从现实世界抽象出的业务实体，用于业务逻辑层接收数据...
    </summary>
  

  </entry>

</feed>


