[ { "title": "POI使用示例", "url": "/posts/poi-shiyong-shili/", "categories": "Knowledge, POI", "tags": "POI", "date": "2021-01-03 03:47:00 +0000", "snippet": "import java.io.FileOutputStream;import org.apache.poi.hssf.usermodel.HSSFCell;import org.apache.poi.hssf.usermodel.HSSFCellStyle;import org.apache.poi.hssf.usermodel.HSSFFont;import org.apache.poi.hssf.usermodel.HSSFRow;import org.apache.poi.hssf.usermodel.HSSFSheet;import org.apache.poi.hssf.use..." }, { "title": "POI自定义单元格背景颜色", "url": "/posts/poi-shezhi-danyuange-yanse/", "categories": "Knowledge, POI", "tags": "POI", "date": "2021-01-03 03:47:00 +0000", "snippet": "import org.apache.poi.hssf.usermodel.*;import org.apache.poi.hssf.util.HSSFColor;import java.io.FileOutputStream;public class PoiBackgroundColorDemo { public static void main(String[] args) throws Exception { //创建Excel工作薄 HSSFWorkbook excel = new HSSFWorkbook(); //创建第一个sheet ..." }, { "title": "POI合并单元格", "url": "/posts/poi-hebing-danyuange/", "categories": "Knowledge, POI", "tags": "POI", "date": "2021-01-03 03:47:00 +0000", "snippet": "XSSFWorkbook wb = new XSSFWorkbook();XSSFSheet sheet = wb.createSheet();// 参数说明：1：开始行 2：结束行 3：开始列 4：结束列// 比如我要合并第二行到第四行，第六列到第八列 sheet.addMergedRegion(new CellRangeAddress(1, 3, 5, 7));比如我们要生成的单元格为：sheet.addMergedRegion(new CellRangeAddress(0, 3, 0, 0));sheet.addMergedRegion(new CellRangeAddress(0..." }, { "title": "POI冻结行或列", "url": "/posts/poi-dongjie-hang-huo-lie/", "categories": "Knowledge, POI", "tags": "POI", "date": "2021-01-03 03:47:00 +0000", "snippet": "HSSFWorkbook workbook = new HSSFWorkbook(); HSSFSheet sheet = workbook.createSheet(); sheet.createFreezePane(a, b, c, d); 四个参数的含义： ａ表示要冻结的列数； ｂ表示要冻结的行数； ｃ表示右边区域[可见]的首列序号； ｄ表示下边区域[可见]的首行序号；举例：// 冻结第一列，冻结列右侧的第一列为B列CreateFreezePane(1, 0, 1, 0);// 冻结左侧两列，冻结列右侧的第一列为F列CreateFreezePane(2, 0, 5, ..." }, { "title": "Java随机数的两种获取方式", "url": "/posts/java-suijishu-de-huoqu-fangshi/", "categories": "Knowledge, Java", "tags": "Java", "date": "2021-01-03 03:47:00 +0000", "snippet": "import java.util.Random;public class RandomDemo { public static void main(String[] args) { //实现方式一 int random = (int) (Math.random() * 60); System.out.println(random); //实现方式二 Random random1 = new Random(124585454); Random random2 = new Random(..." }, { "title": "FileOutputStream类的换行写入和追加写入", "url": "/posts/fileoutputstream-de-huanhang-xieru-he-zhuijia-xieru/", "categories": "Knowledge, Java", "tags": "Java", "date": "2021-01-03 03:47:00 +0000", "snippet": "import java.io.FileOutputStream; public class FileOutputStreamDemo { public static void main(String[] args) throws Exception { // 创建文件输出流对象 FileOutputStream fos1 = new FileOutputStream(&quot;fos1.txt&quot;); // 第二个参数为true表示程序每次运行都是追加字符串在原有的字符上 FileOutputS..." }, { "title": "Maven的安装和使用", "url": "/posts/maven-de-anzhuang-he-shiyong/", "categories": "Knowledge, Maven", "tags": "Maven", "date": "2021-01-02 05:47:00 +0000", "snippet": "一、Maven的安装和配置1.1 下载进入Maven官网的下载页面：http://maven.apache.org/download.cgi，选择当前最新版本，例如apache-maven-3.0.4-bin.zip，下载到本地并解压。1.2 配置进入Maven安装目录下的conf子目录中，打开settings.xml进行配置修改。 修改默认的本地仓库位置Maven默认的本地仓库位置是当前用户工作目录下的.m2/repository，使用过程中这个目录里的文件会比较多，占用空间越来越大。一般建议更换到其它磁盘目录下。如下配置，就把默认的本地仓库更改到D:/.m2/repository这..." }, { "title": "HashMap的四种遍历方法", "url": "/posts/hashmap-de-sizhong-bianli-fangfa/", "categories": "Knowledge, Java", "tags": "Java", "date": "2021-01-02 03:47:00 +0000", "snippet": "import java.util.Collection;import java.util.HashMap;import java.util.Iterator;import java.util.Map;import java.util.Map.Entry;import java.util.Set;public class MapShowTest { public static void main(String[] args) { Map&amp;lt;Integer, Integer&amp;gt; map = new HashMap&amp;lt;Integer, I..." }, { "title": "final和static", "url": "/posts/final-he-static/", "categories": "Knowledge, Java", "tags": "Java", "date": "2021-01-02 03:47:00 +0000", "snippet": "一、final根据程序上下文环境，Java关键字final有“这是无法改变的”或者“终态的”含义，它可以修饰非抽象类、非抽象类的成员方法和变量（包括成员变量和局部变量）。它有以下特点： final类不能被继承，没有子类，final类中的方法默认是final的。 final方法不能被子类的方法覆盖，但可以被继承。 final成员变量表示常量，只能被赋值一次，赋值后值不再改变。 final不能用于修饰构造方法。 父类的private成员方法是不能被子类方法覆盖的，因此private类型的方法默认是final类型的。1.1 final类当用final修饰一个类时，表明这个类不能被继承..." }, { "title": "compareTo()在排序中的应用", "url": "/posts/compareto-fangfa-de-shiyong/", "categories": "Knowledge, Java", "tags": "Java", "date": "2021-01-02 03:47:00 +0000", "snippet": "public class Student implements Comparable&amp;lt;Student&amp;gt; { private String name; private int age; private double score; public Student(String name, int age, double score) { this.age = age; this.name = name; this.score = score; } public String toStrin..." }, { "title": "Java中获取当前时间的方法", "url": "/posts/Java-zhong-huoqu-dangqian-shijian-de-fangfa/", "categories": "Knowledge, Java", "tags": "Java", "date": "2021-01-02 03:47:00 +0000", "snippet": "package test.date.demo;import java.sql.Timestamp;import java.text.SimpleDateFormat;import java.util.Date;public class GetTimeDemo { public static void main(String[] args) { // 使用Date类和SimpleDateFormat类 SimpleDateFormat sdf = new SimpleDateFormat(&quot;YYYY-MM-dd hh:mm:ss&quot;); ..." }, { "title": "接口编程对于开发的意义", "url": "/posts/jiekou-biancheng-duiyu-kaifa-de-yiyi/", "categories": "Knowledge, Java", "tags": "Java", "date": "2021-01-01 03:47:00 +0000", "snippet": "对于Java的意义Java本身也是一个不断完善的语言，他也在频繁的改动他的系统API，他的API是一个庞大的体系，互相关联，如果不采用接口，而都是用实现类的话，那么API的改动就会给整个体系带来不稳定。而且如果改动API，那么就会有大量采用旧API的项目因无法正常运行，会损失大量客户。换句话说，JDK已经发布的API是一种承诺，一经发布就不能更改，即使原来API存在各种各样的问题（例如java.util.Properties类就是一个失败的例子）也必须保留，于是在Java里就出现了不建议使用的方法，但JDK依然提供该方法。而且Java语言本身是一个跨平台的语言，为了满足在各个平台下运行，..." }, { "title": "继承和多态", "url": "/posts/jicheng-he-duotai/", "categories": "Knowledge, Java", "tags": "Java", "date": "2021-01-01 03:47:00 +0000", "snippet": "继承子类继承父类的特征和行为，使得子类具有父类的各种属性和方法。或子类从父类继承方法，使得子类具有父类相同的行为。特点：在继承关系中，父类更通用、子类更具体。父类具有更一般的特征和行为，而子类除了具有父类的特征和行为，还具有一些自己特殊的特征和行为。表示父类和子类的术语：父类和子类、超类和子类、基类和派生类。多态多态性就是发送消息给某个对象，让该对象自行决定响应何种行为。指允许不同类的对象对同一消息做出响应。即同一消息可以根据发送对象的不同而采用多种不同的行为方式。多态的特征是表现出多种形态，具有多种实现方式。或者多态是具有表现多种形态的能力的特征。或者同一个实现接口，使用不同的实例而执..." }, { "title": "重写和重载的区别", "url": "/posts/chongxie-chongzai-de-qubie/", "categories": "Knowledge, Java", "tags": "Java", "date": "2021-01-01 03:47:00 +0000", "snippet": "重写（overwrite）父类与子类之间的多态性，对父类的函数进行重新定义。重写继承到的那个方法的代码，原方法被放弃。子类继承了父类的同名有参函数。当子类继承了父类的一个同名方法，且方法参数不同，称为重写。通过方法的重写，子类可以重新实现父类的某些方法，使其具有自己的特征。重写方法只能存在于具有继承关系中，重写方法只能重写父类非私有的方法。子类函数的访问修饰权限不能低于父类的。重载（overload）重载是一个类中多态性的一种表现。完全新的方法，参数和原方法不同。当前类的同名方法。通过方法的重载，一个类可以有多个具有相同名字的方法，返回值类型可以相同也可以不相同，由传递给它们不同的个数和..." }, { "title": "Spring Boot和Spring Cloud的关系", "url": "/posts/springboot-he-springcloud-de-guanxi/", "categories": "Knowledge, Spring Boot", "tags": "Spring Boot", "date": "2020-12-31 05:47:00 +0000", "snippet": "Spring Boot先于Spring Cloud问世。Spring Boot相当于脚手架，借助他可以快速搭建房子，它本身不具备任何功能属性，只是普通房间，没有其他任何功能。什么是Spring BootSpring Boot简化了基于Spring的应用开发，通过少量的代码就能创建一个独立的、产品级别的Spring应用。Spring Boot为Spring平台及第三方库提供开箱即用的设置，这样你就可以有条不紊地开始。多数Spring Boot应用只需要很少的Spring配置。Spring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发..." }, { "title": "Maven如何查看依赖冲突", "url": "/posts/maven-ruhe-chakan-yilai-chongtu/", "categories": "Knowledge, Maven", "tags": "Maven", "date": "2020-12-30 05:47:00 +0000", "snippet": "什么是依赖冲突Maven是个很好用的依赖管理工具，但是再好的东西也不是完美的。Maven的依赖机制会导致Jar包的冲突。举个例子，现在你的项目中，使用了两个Jar包，分别是A和B。现在A需要依赖另一个Jar包C，B也需要依赖C。但是A依赖的C的版本是1.0，B依赖的C的版本是2.0。这时候，Maven会将这1.0的C和2.0的C都下载到你的项目中，这样你的项目中就存在了不同版本的C，这时Maven会依据依赖路径最短优先原则，来决定使用哪个版本的Jar包，而另一个无用的Jar包则未被使用，这就是所谓的依赖冲突。如何查看依赖冲突使用Maven命令：cd &amp;lt;含有pom.xml的文..." }, { "title": "Java注解规范", "url": "/posts/java-zhujie-guifan/", "categories": "Knowledge, Java", "tags": "Java", "date": "2020-12-30 03:47:00 +0000", "snippet": "一、注解的原则优雅的注解通常要满足三要素。 Nothing is strange没有注解的代码对于阅读者非常不友好，哪怕代码写的在清除，阅读者至少从心理上会有抵触，更何况代码中往往有许多复杂的逻辑，所以一定要写注解，不仅要记录代码的逻辑，还有说清楚修改的逻辑。 Less is more从代码维护角度来讲，代码中的注解一定是精华中的精华。合理清晰的命名能让代码易于理解，对于逻辑简单且命名规范，能够清楚表达代码功能的代码不需要注解。滥用注解会增加额外的负担，更何况大部分都是废话。 // 根据id获取信息【废话注解】getMessageById(id) Advance ..." }, { "title": "Java命名规范", "url": "/posts/java-mingming-guifan/", "categories": "Knowledge, Java", "tags": "Java", "date": "2020-12-30 03:47:00 +0000", "snippet": "一、Java中的命名规范好的命名能体现出代码的特征，含义或者是用途，让阅读者可以根据名称的含义快速厘清程序的脉络。不同语言中采用的命名形式大相径庭，Java中常用到的命名形式共有三种，既首字母大写的UpperCamelCase，首字母小写的lowerCamelCase以及全部大写的并用下划线分割单词的UPPER_CAMEL_UNSER_SCORE。通常约定，类一般采用大驼峰命名，方法和局部变量使用小驼峰命名，而大写下划线命名通常是常量和枚举中使用。 类型 约束 例 项目名 全部小写，多个单词用中划线分隔..." }, { "title": "Windows10系统字体模糊", "url": "/posts/win10-ziti-mohu/", "categories": "Knowledge, SYSTEM", "tags": "SYSTEM", "date": "2020-12-28 05:47:00 +0000", "snippet": "故障原因这个不是字体的问题，是电脑的特效较高，阴影较为清晰。解决方案把阴影效果关掉。在计算机图标点击“右键”，选择“属性”，高级系统设置 —— 高级 —— 性能 —— 设置 —— 把“在桌面上为图标标签使用阴影”的勾去掉。" }, { "title": "Windows10打开图片时提示“在禁用UAC时，无法激活此应用”", "url": "/posts/win10-wufa-dakai-tupian/", "categories": "Knowledge, SYSTEM", "tags": "SYSTEM", "date": "2020-12-28 05:47:00 +0000", "snippet": "故障描述Windows10正式版打开图片时提示“在禁用UAC时，无法激活此应用”。解决方案1打开“运行”，输入’msconfig’并按回车键进入“系统配置”程序界面。切换到“工具”选项卡，选中“更改UAC设置”项，点击“启动”按钮。此时将直接打开“用户账户控制设置”窗口，将“用户账户控制”级别设置为除“从不通知”之外的其它级别，点击“确定”按钮。接下来我们必须重启一下计算机，才能使“用户账户控制（UAC）”功能得到生效。解决方案2打开“运行”，输入Regedit运行注册表，找到HKEY_LOCAL_MACHINE——SOFTWARE——Microsoft——Windows——Curren..." }, { "title": "命令提示符无法执行命令", "url": "/posts/DOS-jiemian-wufa-zhixing-mingling/", "categories": "Knowledge, SYSTEM", "tags": "SYSTEM", "date": "2020-12-28 05:47:00 +0000", "snippet": "故障描述可以运行cmd打开命令提示符界面，但是无法执行命令，所有的命令都提示xx不是内部或外部命令，也不是可运行的程序或批处理文件。解决方法修改环境变量，在path变量值后添加%SystemRoot%\\system32，故障修复。" }, { "title": "JQuery下载页面所有图片", "url": "/posts/xiazai-yemian-quanbu-tupian/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-28 05:47:00 +0000", "snippet": "&amp;lt;script src=&quot;http://libs.baidu.com/jquery/2.0.0/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&amp;lt;script&amp;gt;$(function () { var imglist = $(&quot;body&quot;).find(&quot;img&quot;); for (var i = 0; i &amp;lt; imglist.length; i++) { downloadImage($(imglist[i]).a..." }, { "title": "Redis异常：Could not get a resource from the pool", "url": "/posts/redis-yichang-wufa-huoqu-lianjie/", "categories": "Knowledge, PLSQL", "tags": "PLSQL", "date": "2020-12-26 05:47:00 +0000", "snippet": "报错信息redis.clients.jedis.exceptions.JedisConnectionException: Could not get a resource from the pool at redis.clients.util.Pool.getResource(Pool.java:22) at com.derbysoft.jredis.longkeytest.BorrowObject.run(BorrowObject.java:22) at java.lang.Thread.run(Thread.java:662) Caused by: java.util.NoS..." }, { "title": "Java实现文件下载功能，自动弹出保存窗口", "url": "/posts/java-shixian-wenjian-xiazai-gongneng/", "categories": "Knowledge, Java", "tags": "Java, Learning", "date": "2020-12-23 05:47:00 +0000", "snippet": "public void download() { String filePath = this.queueService.getCsvFilePathById(id);//所要下载的文件路径，从数据库中查询得到，当然也可以直接写文件路径，如：C:\\\\Users\\\\Administrator\\\\Desktop\\\\csv\\\\号码_utf8_100.csv try { File file = new File(filePath); String fileName = filePath.substring(filePath.lastIndexOf(File..." }, { "title": "学习和整理列表", "url": "/posts/xuexi-liebiao/", "categories": "Index, Learning", "tags": "Learning", "date": "2020-12-23 05:47:00 +0000", "snippet": " ECharts图表的使用 poi导出、excel附加、word附加 SVN使用及版本控制原理 为Jekyll添加Fancybox 使用Faker.js和JSON-Server构造API原型" }, { "title": "Prism支持的语言", "url": "/posts/prism-zhichi-de-yuyan/", "categories": "Knowledge, GitBook", "tags": "GitBook", "date": "2020-12-23 05:47:00 +0000", "snippet": "语法 ```javanew Test();```This is the list of all 218 languages currently supported by Prism, with their corresponding alias, to use in place of xxxx in the language-xxxx (or lang-xxxx) class: Markup - markup, html, xml, svg, mathml, ssml, atom, rss CSS - css C-like - clike JavaScript - javasc..." }, { "title": "Markdown语法", "url": "/posts/markdown-yufa/", "categories": "Knowledge, GitBook", "tags": "GitBook", "date": "2020-12-23 05:47:00 +0000", "snippet": "Markdown标题使用=和-标记一级和二级标题我展示的是一级标题=================我展示的是二级标题-----------------使用#号标记使用#号可表示1-6级标题，一级标题对应一个#号，二级标题对应两个#号，以此类推。# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题Markdown段落Markdown段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。当然也可以在段落后面使用一个空行来表示重新开始一个段落。Markdown字体*斜体文本* _斜体文本_ **粗体文本** __粗..." }, { "title": "GitBook启动脚本", "url": "/posts/gitbook-qidong-jiaoben/", "categories": "Knowledge, GitBook", "tags": "GitBook", "date": "2020-12-23 05:47:00 +0000", "snippet": "@echo off clsTITLE GitBook 管理菜单color 1fgoto menu:menuecho.echo ╭──────────────╮echo ╭─────────┤ GitBook 管理菜单 ├╮echo │ 主菜单 │ │ │echo │ ╰────────────── ╯ │echo │ [1]初始化GitBook ..." }, { "title": "使用gitbook build命令导出的HTML不能跳转", "url": "/posts/gitbook-daochu-de-html-buzhichi-tiaozhuan/", "categories": "Knowledge, GitBook", "tags": "GitBook", "date": "2020-12-23 05:47:00 +0000", "snippet": "原因GitBook新版本不支持HTML跳转功能，所以要降版本至2.6.7。解决办法如下第一步生成时指定GitBook的版本, 本地没有会先下载。gitbook build --gitbook=2.6.7 可能会报错，如下操作，列出本地所有的GitBook版本。gitbook ls 卸载对应的GitBook版本（新版本需要先卸载，也可以先下载2.6.7版本，这样两个版本会共存，默认使用最新版本）。gitbook uninstall 3.2.3第二步运行命令。gitbook build会出来几行提示信息，不用管，现在可以跳转了，试下吧。 注：如果遇到:Error loading versi..." }, { "title": "GitBook常用插件", "url": "/posts/gitbook-changyong-chajian/", "categories": "Knowledge, GitBook", "tags": "GitBook", "date": "2020-12-23 05:47:00 +0000", "snippet": "{ &quot;pluginsConfig&quot;: { // 给GitBook的目录添加数字，添加章节序号 &quot;theme-default&quot;: { &quot;showLevel&quot;: true }, // 代码高亮插件的配置 &quot;prism&quot;: { &quot;css&quot;: [ &quot;prism-themes/themes/prism-atom-dark.css&quot; ..." }, { "title": "PLSQL无法使用like查询，无法查询中文", "url": "/posts/plsql-wufa-shiyong-like-chaxun-wufa-cahxun-zhongwen/", "categories": "Knowledge, PLSQL", "tags": "PLSQL", "date": "2020-12-21 05:47:00 +0000", "snippet": "问题描述 中文乱码。 中文显示没有乱码，中文作为条件无法查询。 like无法查询出中文内容。问题原因以上三种情况是因为Oracle客户端编码不正确导致。解决办法 查询Oracle服务端字符集编码，获取NLS_CHARACTERSET字段值：select * from v$nls_parameters，保存查询到的值，如：NLS_CHARACTERSET = AL32UTF8。 查询Oracle服务端语言信息：SELECT &#39;AMERICAN_AMERICA.&#39; || PROPERTY_VALUE FROM DATABASE_PROPERTIES，保存查询到的值，..." }, { "title": "Linux rm命令", "url": "/posts/linux-rm-mingling/", "categories": "Knowledge, Linux", "tags": "Linux", "date": "2020-12-18 05:47:00 +0000", "snippet": "常用的几个参数为“-f -i -r -v”-i删除前逐一询问确认。这个参数有一个好处，当在删除大量文件或目录的时候，可以防止我们误操作删除的文件或目录。-f即使原档案属性设为唯读，强制删除，系统不会逐一让我们确认。-r将目录及以下之档案文件一并删除。注意:如果rm不带此参数，是不能删除目录的。-v或–verbose 　显示指令执行后的结果信息。" }, { "title": "JS限制字段输入长度", "url": "/posts/js-xianzhi-ziduan-shuru-changdu/", "categories": "Knowledge, JavaScript", "tags": "JavaScript", "date": "2020-12-18 05:47:00 +0000", "snippet": "window.onload = function() { document.getElementById(&quot;text1&quot;).maxLength = 50; document.getElementById(&quot;text2&quot;).maxLength = 200;};" }, { "title": "JS实现Sleep函数", "url": "/posts/js-shixian-sleep-hanshu/", "categories": "Knowledge, JavaScript", "tags": "JavaScript", "date": "2020-12-18 05:47:00 +0000", "snippet": "&amp;lt;script&amp;gt; window.onload = function() { sleep(5000); alert(&quot;OK&quot;); } function sleep(numberMillis) { var now = new Date(); var exitTime = now.getTime() + numberMillis; while (true) { now = new Date(); if (now.getTime() &amp;gt; exitTime) ret..." }, { "title": "JS将数字格式化成货币（钱）格式", "url": "/posts/js-jiangshuzi-geshihua-wei-huobigeshi/", "categories": "Knowledge, JavaScript", "tags": "JavaScript", "date": "2020-12-18 05:47:00 +0000", "snippet": "function formatMoney(number, places, symbol, thousand, decimal) { number = number || 0; places = !isNaN(places = Math.abs(places)) ? places : 2; symbol = symbol !== undefined ? symbol : &quot;$&quot;; thousand = thousand || &quot;,&quot;; decimal = decimal || &quot;.&quot;; var ..." }, { "title": "JS获取当前月的前12个月", "url": "/posts/js-huoqu-dangqianyue-de-qian12geyue/", "categories": "Knowledge, JavaScript", "tags": "JavaScript", "date": "2020-12-18 05:47:00 +0000", "snippet": "var dataArr = [];var data = new Date();var year = data.getFullYear();data.setMonth(data.getMonth()+1, 1) //获取到当前月份,设置月份for (var i = 0; i &amp;lt; 12; i++) { data.setMonth(data.getMonth() - 1); //每次循环一次月份值减1 var m = data.getMonth() + 1; m = m &amp;lt; 10 ? &quot;0&quot; + m : m; dataAr..." }, { "title": "Git上传文件不区分大小写的问题", "url": "/posts/git-shangchuan-buqufen-daxiaoxie/", "categories": "Knowledge, Git", "tags": "Git", "date": "2020-12-17 05:47:00 +0000", "snippet": "问题文件名称最初新建的时候是大写，但是后面想要改成小写的，修改完提交的时候使用git status命令发现并没有修改的记录，提交之后在Git上也没有修改。解决办法因为Git默认是不区分大小写的，所以git status是不会提示你有修改的。 通过git config --get core.ignorecase查看默认配置 通过git config core.ignorecase false设置为区分大小写然后git status就可以看到修改的东西了，然后进行正常的操作就可以提交了。最好是一开始就把Git的默认配置修改掉（区分大小写的模式），后面的操作其实也可以直接本地先备份再删除提交。" }, { "title": "Jackson反序列化错误的解决方法", "url": "/posts/json-fanxuliehua-cuowu/", "categories": "Knowledge, Java", "tags": "Java", "date": "2020-12-17 03:47:00 +0000", "snippet": "错误信息com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException：Unrecognized field，出现这种问题的情况是由于JSON里面包含了实体没有的字段导致反序列化失败。第一种解决方案// ObjectMapper对象添加String s = &quot;{\\&quot;id\\&quot;:1,\\&quot;name\\&quot;:\\&quot;test\\&quot;,\\&quot;age\\&quot;:19}&quot;;ObjectMapper mapper = new ObjectMapper();ma..." }, { "title": "一个数组中的元素复制到另一个数组", "url": "/posts/jiang-shuzu-zhong-de-yuansu-fuzhi-dao-lingyige-shuzu/", "categories": "Knowledge, Java", "tags": "Java", "date": "2020-12-17 03:47:00 +0000", "snippet": "使用函数arraycopy(Object src, int srcPos, Object dest, int destPos, int length)，其中五个参数分别表示为： src— 被复制的数组 srcPos —从第几个元素开始复制 dest —要复制到的数组 destPos —从第几个元素开始粘贴 length —一共需要复制的元素个数public static void main(String[] args) { char a1[] = {&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#3..." }, { "title": "Java中创建数组的三种方式", "url": "/posts/java-zhong-chuangjian-shuzu-de-sanzhong-fangshi/", "categories": "Knowledge, Java", "tags": "Java", "date": "2020-12-17 03:47:00 +0000", "snippet": "public static void main(String[] args) { //创建数组的第一种方法，指定数组长度 int[] arr1 = new int[6]; //创建数组的第二种方法，创建并初始化 int[] arr2 = {1, 2, 3, 4}; //创建数组的第三种方法 int[] arr3 = new int[]{1, 2, 3, 4, 5};}" }, { "title": "Java将JSON转为对象数组的方法", "url": "/posts/java-jiang-json-zhuanwei-duixiangshuzu-de-fangfa/", "categories": "Knowledge, Java", "tags": "Java", "date": "2020-12-17 03:47:00 +0000", "snippet": "第一种方法String jsonStr = &quot;[{\\&quot;id\\&quot;: \\&quot;0\\&quot;, \\&quot;ip\\&quot;: \\&quot;123\\&quot;, \\&quot;mac\\&quot;: \\&quot;456\\&quot;}, {\\&quot;id\\&quot;: \\&quot;1\\&quot;, \\&quot;ip\\&quot;: \\&quot;111\\&quot;, \\&quot;mac\\&quot;: \\&quot;222\\&quot;}]&quot;;List&amp;lt;User&am..." }, { "title": "Tomcat各目录的作用", "url": "/posts/tomcat-ge-mulu-de-zuoyong/", "categories": "Knowledge, Tomcat", "tags": "Tomcat", "date": "2020-12-16 05:47:00 +0000", "snippet": "binbin目录主要是用来存放Tomcat的命令，主要有两大类，一类是以.sh结尾的（linux命令），另一类是以.bat结尾的（windows命令），很多环境变量的设置都在此处，例如可以设置JDK路径、Tomcat路径。 startup用来启动Tomcat shutdown用来关闭Tomcat 修改catalina可以设置Tomcat的内存confconf目录主要是用来存放Tomcat的一些配置文件。 server.xml可以设置端口号、设置域名或IP、默认加载的项目、请求编码 web.xml可以设置Tomcat支持的文件类型 context.xml可以用来配置数据源之类的..." }, { "title": "一台机器上启动多个Tomcat", "url": "/posts/ruhe-zai-yitai-fuwuqi-shang-qidong-duoge-tomcat/", "categories": "Knowledge, Tomcat", "tags": "Tomcat", "date": "2020-12-16 05:47:00 +0000", "snippet": "如果需要在一台机器上启动多个Tomcat服务器，在默认设置下肯定会发生端口冲突。为实现这个效果，只需修改conf子目录中的server.xml文件即可。共需修改三处：修改http访问端口（默认为8080端口）:&amp;lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;connectionTimeout=&quot;20000&quot;redirectPort=&quot;8443&quot; URIEncoding=&quot;gb2312&quot;/&amp;gt;修改Shutdown端口（默认为800..." }, { "title": "启动Tomcat时窗口一闪而过的解决方法", "url": "/posts/qidong-tomcat-chuangkou-yishanerguo/", "categories": "Knowledge, Tomcat", "tags": "Tomcat", "date": "2020-12-16 05:47:00 +0000", "snippet": "进入Tomcat的安装目录，看到圈出红色的3个bat文件，一般通过startup.bat启动Tomcat时流程是startup-&amp;gt;catalina-&amp;gt;setclasspath-&amp;gt;catalina，如果这3个bat文件里面有一个出现错误的话就是启动失败。先打开startup.bat，在最后加上一句pause再次执行startup.bat，就会看到上图，当按任意的键时cmd窗口又是一闪而过了。但是这已经确定了环境变量都是正确的。为了更加详细的看到信息，我们再来更改一句：找到call &quot;%EXECUTABLE%&quot; start %CM..." }, { "title": "搭建SVN服务器时报错：Cannot query proxy blanket：no such interface supported (0x80004002)", "url": "/posts/dajian-svn-fuwuqi-shi-baocuo/", "categories": "Knowledge, SVN", "tags": "SVN", "date": "2020-12-14 05:47:00 +0000", "snippet": "一、错误信息Cannot query proxy blanket: no such interface supported (0x80004002)二、解决方案这个错误只会在有NVIDIA独立显卡的笔记本上出现，只要切换到集成显卡即可，步骤为： 打开NVIDIA控制面板。 选择3D设置-&amp;gt;管理3D设置。 选择集成显卡作为优先的图形处理器。 点击应用。三、备注1、如何打开NVIDIA控制面板如果安装了NVIDIA显卡驱动，就可以在电脑桌面空白处点击鼠标右键，然后选择进入“NVIDIA控制面板”，如果没有的话，可以按照以下方法操作： 打开控制面板。 在打开的窗口右上..." }, { "title": "使用Nexus搭建Maven私服", "url": "/posts/nexus-dajian-maven-sifu/", "categories": "Knowledge, Nexus", "tags": "Nexus", "date": "2020-12-14 05:47:00 +0000", "snippet": "为什么要搭建Nexus私服，原因很简单，有些公司不提供外网给项目组人员，因此就不能使用Maven访问远程的仓库，所以很有必要在局域网里找一台有外网权限的机器，搭建Nexus私服，然后开发人员连到这台私服上，这样的话就可以通过这台搭建了Nexus私服的电脑访问Maven的远程仓库。1、首先确定我们的环境安装好Maven，JDK等必须的环境。 2、这些都准备好之后，去下载最新版本的Nexus，下载地址：http://www.sonatype.org/nexus/go。3、下载完成后解压，打开目录nexus-2.4.0-09-bundle\\nexus-2.4.0-09\\bin\\jsw 这个目..." }, { "title": "IntelliJ IDEA快捷键", "url": "/posts/intelliJ-idea-kuaijiejian/", "categories": "Knowledge, IntelliJ IDEA", "tags": "IntelliJ IDEA", "date": "2020-12-14 05:23:00 +0000", "snippet": "导包：Alt + Enter快速切换下一行：Shift + Enter查看继承关系：F4查看类结构：Ctrl + o整体修改变量名或方法名：Ctrl + Shift + r生成try catch方法：Alt + Shift + z查找文件：Shift + Shift抽取方法：Alt + Shift + m打开最近修改的文件：Ctrl + e快速搜索类中错误：Ctrl + Shift + q 选择要粘贴的内容：Ctrl + Shift + v查找方法在哪里被调用：Ctrl + Alt + h查看类的继承结构图：Ctrl + Alt + u" }, { "title": "SpringMVC接收form表单提交的数组数据", "url": "/posts/springmvc-jieshou-form-biaodan-tijiao-de-shuzu-shuju/", "categories": "Knowledge, SpringMVC", "tags": "SpringMVC", "date": "2020-12-10 05:47:00 +0000", "snippet": "前端页面&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html lang=&quot;en&quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&quot;UTF-8&quot;&amp;gt; &amp;lt;title&amp;gt;Title&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;form action=&quot;test&qu..." }, { "title": "&lt; select&gt;标签的回显", "url": "/posts/select-biaoqian-de-huixian/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-10 05:47:00 +0000", "snippet": "&amp;lt;div class=&quot;form-group&quot;&amp;gt; &amp;lt;label class=&quot;col-sm-2&quot; contenteditable=&quot;true&quot; for=&quot;test&quot;&amp;gt;数字&amp;lt;/label&amp;gt; &amp;lt;div class=&quot;col-xs-12&quot;&amp;gt; &amp;lt;select id=&quot;num&quot; class=&quot;num&quot; name..." }, { "title": "&lt; select&gt;标签的回显", "url": "/posts/select-biaoqian-de-huixian-%E5%89%AF%E6%9C%AC/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-10 05:47:00 +0000", "snippet": "&amp;lt;div class=&quot;form-group&quot;&amp;gt; &amp;lt;label class=&quot;col-sm-2&quot; contenteditable=&quot;true&quot; for=&quot;test&quot;&amp;gt;数字&amp;lt;/label&amp;gt; &amp;lt;div class=&quot;col-xs-12&quot;&amp;gt; &amp;lt;select id=&quot;num&quot; class=&quot;num&quot; name..." }, { "title": "JQuery如何判断为null、undefined、NaN", "url": "/posts/jquery-ruhe-panduan-kongzhi/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-10 05:47:00 +0000", "snippet": "判断是否为null&amp;lt;script type=&quot;text/javascript&quot;&amp;gt; var tmp = null; if (tmp == null) { alert(&quot;null&quot;); }&amp;lt;/script&amp;gt;运行结果：会弹窗null判断是否为undefined&amp;lt;script type=&quot;text/javascript&quot;&amp;gt; var tmp = undefined; if (typeof (tmp) == &qu..." }, { "title": "JQuery获取元素的属性及对元素操作", "url": "/posts/jquery-huoqu-yuansu-de-shuxing-ji-dui-yuansu-caozuo/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-10 05:47:00 +0000", "snippet": "获取宽度为百分比(%)的对象具体宽度(px)&amp;lt;div id=&quot;panel&quot;&amp;gt; &amp;lt;div id =&quot;a&quot; style=&quot;width:66%&quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;script type=&quot;text/javascript&quot;&amp;gt; $(document).ready(function () { alert($(&quot;#a&quot;).inne..." }, { "title": "JQuery的attr()和prop()的区别", "url": "/posts/jquery-prop-hanshu-he-attr-hanshu-de-qubie/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-09 05:47:00 +0000", "snippet": "根据官方的建议，具有 true 和 false 两个值的属性，如 checked, selected 或者 disabled 使用 prop()，其他的使用 attr()" }, { "title": "JQuery判断下拉和单选是否选中并获取值和索引", "url": "/posts/jquery-panduan-xiala-danxuan-shifou-xuanzhong/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-09 05:47:00 +0000", "snippet": "select判断option是否被选中$(&quot;#mySelect&quot;).is(&quot;:checked&quot;); // false是未被选中，true是被选中$(&quot;#mySelect&quot;).attr(&#39;checked&#39;) == undefined; // false是未被选中，true是被选中获取select选中的值$(&quot;#mySelect option:selected&quot;).val();$(&quot;#mySelect&quot;).find(&#39;option:selected&#39;).val(..." }, { "title": "JQuery获取字符串字节长度", "url": "/posts/jquery-huoqu-zifuchuan-zijie-changdu/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-09 05:47:00 +0000", "snippet": "function getByteLen(val) { var len = 0; for (var i = 0; i &amp;lt; val.length; i++) { var code = val.charCodeAt(i); if (code &amp;gt;= 0 &amp;amp;&amp;amp; code &amp;lt;= 128) { len += 1; } else { len += 2; } } return len;}" }, { "title": "Linux退出vi编辑模式", "url": "/posts/linux-vi-mingling/", "categories": "Knowledge, Linux", "tags": "Linux", "date": "2020-12-08 05:47:00 +0000", "snippet": "按ESC键跳到命令模式，然后：:w 保存文件但不退出vi:w file 将修改另外保存到file中，不退出vi:w! 强制保存，不推出vi:wq 保存文件并退出vi:wq! 强制保存文件，并退出viq: 不保存文件，退出vi:q! 不保存文件，强制退出vi:e! 放弃所有修改，从上次保存文件开始再编辑" }, { "title": "Linux常用命令", "url": "/posts/linux-changyong-mingling/", "categories": "Knowledge, Linux", "tags": "Linux", "date": "2020-12-08 05:47:00 +0000", "snippet": "ps -ef|grep tomcat 查看Tomcat的进程./startup.sh 启动Tomcattail -f catalina.out 查看Tomcat的启动信息clear 清除信息ps -ef|grep java 查询当前有没有Tomcat进程 kill -9 进程号 杀进程du -sh /home/* ..." }, { "title": "JQuery在iframe中查找元素", "url": "/posts/jquery-zai-iframe-zhong-chazhao-yuansu/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-08 05:47:00 +0000", "snippet": "$(window).on(&#39;load&#39;, function () { $(&#39;#mainiframe&#39;).contents().find(&#39;#myTab&#39;).remove();});" }, { "title": "JQuery为input绑定触发事件", "url": "/posts/jquery-wei-input-bangding-chufa-shijian/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-08 05:47:00 +0000", "snippet": "输入框正在输入时$(&quot;#ipt&quot;).on(&#39;input&#39;, function() { if (!($(&#39;#ipt&#39;).val() == &#39;&#39;)) { $(&quot;.cancle_ico&quot;).removeClass(&#39;hide&#39;); } else { $(&quot;.cancle_ico&quot;).addClass(&#39;hide&#39;); }})输入框得到焦点时$(&quot;#ipt&quot;).on(&#39;focus&#3..." }, { "title": "JQuery使用Replace函数替换全部匹配项", "url": "/posts/jquery-shiyong-replace-hanshu-tihuan-quanbu-pipeixiang/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-08 05:47:00 +0000", "snippet": "JQuery的Replace仅能替换第一个匹配的内容，例如：var str = &quot;a&amp;lt;br/&amp;gt;b&amp;lt;br/&amp;gt;c&amp;lt;br/&amp;gt;&quot;;var Newstr = str.Replace(&quot;&amp;lt;br/&amp;gt;&quot;, &quot;&quot;);alert(Newstr); // 内容为：ab&amp;lt;br/&amp;gt;c&amp;lt;br/&amp;gt;要替换全部匹配项，可以使用正则表达式：var str = &quot;a&amp;lt;br/&a..." }, { "title": "JQuery检查字段是否为空", "url": "/posts/jquery-jiancha-ziduan-shifou-weikong/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-08 05:47:00 +0000", "snippet": "function checkIsNull() { var flag = false; var test1 = $(&#39;input:radio[name=&quot;test1&quot;]:checked&#39;).val(); var test2 = $(&quot;#test2&quot;).val() if (test1) { flag = true; } else { alert(&quot;输入框1不能为空！&quot;); flag = false; } if (flag &amp;a..." }, { "title": "JQuery检查输入内容是否包含特殊字符", "url": "/posts/jquery-jiancha-shuru-neirong-shifou-baohan-teshu-zifu/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-08 05:47:00 +0000", "snippet": "调用函数判断function checkNameReg(val) { var regEn = /[@#$%^&amp;amp;*()[\\]]/im, regCn = /[@#￥%……&amp;amp;*[\\]]/im; if(regEn.test(val) || regCn.test(val)) { return false; } return true; }或直接在键入的时候将特殊符号替换$(function() { $(&quot;#TEST&quot;).keyup(function() { var in..." }, { "title": "$ is not defined", "url": "/posts/$-is-not-defined/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-08 05:47:00 +0000", "snippet": "报错信息ReferenceError: $ is not defined [详细了解]&amp;lt;script type=&quot;text/javascript&quot;&amp;gt; $(function () { alert(&quot;OK&quot;); });&amp;lt;/script&amp;gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;修改办法，把JQu..." }, { "title": "JS实现禁用浏览器后退", "url": "/posts/js-shixian-jinzhi-liulanqi-houtui/", "categories": "Knowledge, JavaScript", "tags": "JavaScript", "date": "2020-12-07 05:47:00 +0000", "snippet": "这种方式，可以消除后退的所有动作，包括键盘、鼠标手势等产生的后退动作。&amp;lt;script language=&quot;javascript&quot;&amp;gt; //防止页面后退 history.pushState(null, null, document.URL); window.addEventListener(&#39;popstate&#39;, function () { history.pushState(null, null, document.URL); });&amp;lt;/script&amp;gt;" }, { "title": "JS常用函数", "url": "/posts/js-changyong-hanshu-zhengli/", "categories": "Knowledge, JavaScript", "tags": "JavaScript", "date": "2020-12-07 05:47:00 +0000", "snippet": "Math.abs()取绝对值var a = -20;var b = Math.abs(a);" }, { "title": "JQuery的页面加载完毕事件", "url": "/posts/jquery-yemian-jiazai-wanbi-shijian/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-07 05:47:00 +0000", "snippet": "第一种$(document).ready(function() { // do something});$(document)把原生的document这个DOM对象转换为JQuery对象，转换完成后才能调用。其中ready方法ready(fn)表示的是页面结构被加载完毕后执行传入函数fn。第二种$(function() { // do something});当页面加载完毕后执行里面的函数，这一种相对简单，用的最多。第三种window.οnlοad = function() { // do something}上面两种方式与window.onload的区别为： JQu..." }, { "title": "JQuery控制输入字段的长度", "url": "/posts/jquery-kongzhi-shuru-ziduan-de-changdu/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-07 05:47:00 +0000", "snippet": "$(&quot;#TEST&quot;).attr(&quot;onkeyup&quot;, &quot;checkLength(this, 50);&quot;); // 设置触发事件var checkLength = function(dom, maxLength) { var l = 0; for(var i = 0; i &amp;lt; dom.value.length; i++) { if (/[\\u4e00-\\u9fa5]/.test(dom.value[i])) { l+=2; } else { ..." }, { "title": "JQuery获取相邻元素", "url": "/posts/jquery-huoqu-xianglin-yuansu/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-07 05:47:00 +0000", "snippet": "JQuery里我们要获取某个元素的相邻元素时，可以用到的命令有三个： next()：用来获取下一个同辈元素。 prev()：用来获取上一个同辈元素。 siblings()：用来获取所有的同辈元素。下面来看看简单的实例：&amp;lt;div&amp;gt; &amp;lt;p id=&quot;1&quot;&amp;gt;1&amp;lt;/p&amp;gt; &amp;lt;p id=&quot;2&quot;&amp;gt;2&amp;lt;/p&amp;gt; &amp;lt;p id=&quot;3&quot;&amp;gt;3&amp;lt;/p&am..." }, { "title": "JQuery对象和DOM元素的互转", "url": "/posts/jquery-he-dom-yuansu-huzhuan/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-07 05:47:00 +0000", "snippet": "JQuery对象转成DOM元素id选择器 $(“#id”)[0]&amp;lt;input type=&quot;text&quot; id=&quot;tx&quot; value=&quot;44&quot;&amp;gt;&amp;lt;script&amp;gt;$(function() { // 通过id选择器获取Jquery对象 var tx = $(&quot;#tx&quot;); // 转成dom对象 var domObj = tx[0]; alert(domObj.value);})&amp;lt;/script&amp;gt;id选择..." }, { "title": "JQuery发送POST请求", "url": "/posts/jquery-fasong-post-qingqiu/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-07 05:47:00 +0000", "snippet": "$.post(&quot;/test/test/deleteAction.do&quot;, function(data) { alert(data);});" }, { "title": "JQuery获取当前点击元素的自定义属性", "url": "/posts/huoqu-dianji-duixiang-de-shuxing/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-07 05:47:00 +0000", "snippet": "&amp;lt;a onclick=&quot;goTest(this)&quot; myAttr=&quot;${data}&quot;&amp;gt;点击删除&amp;lt;/a&amp;gt;&#39;;传this过去即可function goTest(e) { var data = $(e).attr(&quot;myAttr&quot;); $(&quot;form&quot;).attr(&quot;action&quot;, &quot;goTest.do?data=&quot; + data).submit(); return false;}" }, { "title": "将&lt; a&gt;标签转为POST方式提交", "url": "/posts/a-biaoqian-zhuanwei-post-fangshi-tijiao/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-07 05:47:00 +0000", "snippet": "点击&amp;lt;a&amp;gt;标签调用JS函数提交，使用Ajax请求后台，发现无法获得ModelAndView返回的View，无法跳转页面，因此将&amp;lt;a&amp;gt;标签跳转改为POST方式提交。function goTest(el) { var href = $(el).attr(&quot;href&quot;); // 获取&amp;lt;a&amp;gt;标签的href $(&quot;form&quot;).attr(&quot;action&quot;, &quot;web.goTest.do&quot;).submit(); // 将hre..." }, { "title": "JQuery四舍五入保留两位小数", "url": "/posts/jquery-sishewuru-baoliuliangwei-xiaoshu/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-06 05:47:00 +0000", "snippet": "function gettoDecimal(num) { var result = parseFloat(num); if (isNaN(result)) { return false; } result = Math.round(num * 100) / 100; var s_x = result.toString(); var pos_decimal = s_x.indexOf(&#39;.&#39;); if (pos_decimal &amp;lt; 0) { pos_decimal = s_x.length;..." }, { "title": "JQuery获取当前日期", "url": "/posts/jquery-huoqu-dangqian-riqi/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-12-06 05:47:00 +0000", "snippet": "function getNowDate(){ var myDate = new Date; var year = myDate.getFullYear(); // 获取当前年 var mon = myDate.getMonth() + 1; // 获取当前月 var date = myDate.getDate(); // 获取当前日 var h = myDate.getHours(); // 获取当前小时数(0-23) var m = myDate.getMinutes(); // 获取当前分钟数(0-59) var s = myDate.get..." }, { "title": "NodeJS安装", "url": "/posts/nodejs-anzhuang/", "categories": "Knowledge, NodeJS", "tags": "NodeJS", "date": "2020-12-02 05:47:00 +0000", "snippet": "下载首先去到官网：https://nodejs.org/en/download/下载对应的版本：接着选择好路径，一路安装即可。新版的NodeJS自带npm ，所以无需重新安装npm，安装结束后，在cmd输入node -v和npm -v即可显示安装成功：配置路径和环境变量安装之后，我们需要对路径进行重新配置，如果不重新配置路径，则下载的moudle还是在C盘，例如在安装路径下新建两个文件夹：用来存放模块和缓存。创建之后，我们在窗口输入：npm config set prefix D:\\nodejs\\node_globalnpm config set cache D:\\nodejs\\node..." }, { "title": "Log4j日志文件乱码", "url": "/posts/log4j-rizhi-wenjian-luanma/", "categories": "Knowledge, Log4j", "tags": "Log4j", "date": "2020-12-02 05:47:00 +0000", "snippet": "在默认语言非中文（或者说默认语言不支持中文的）的Windows、Linux、Unix上，用Log4j打印日志，出现乱码，常见的就是一堆问号。解决方法如果是log4j.properties为配置文件，比如log4j.appender.A1=org.apache.log4j.RollingFileAppenderlog4j.appender.A1.File=all.log加入一行log4j.appender.A1=org.apache.log4j.RollingFileAppenderlog4j.appender.A1.Encoding=UTF-8log4j.appender.A1.File..." }, { "title": "Jira REST API调用方式", "url": "/posts/jira-rest-api-diaoyong-fangfa/", "categories": "Knowledge, Jira", "tags": "Jira", "date": "2020-12-02 05:47:00 +0000", "snippet": "调用Jira REST API时的权限验证采用basic authentication这种验证方式，主要考虑到简单易行、操作方便。具体的操作方法为在请求的http header中添加Authorization参数，取值为Basic base64(username:password)，这里的username和password是企业自己部署的JIRA平台的登陆账号和密码。Jira REST API：https://docs.atlassian.com/software/jira/docs/api/REST/5.1.3/#id120417package com.jira.test.util;i..." }, { "title": "三种数据库的JDBC连接方式", "url": "/posts/sanzhong-shujuk-jdbc-lianjiefangshi/", "categories": "Knowledge, JDBC", "tags": "JDBC", "date": "2020-12-02 05:47:00 +0000", "snippet": "MySQLClass.forName(&quot;com.mysql.jdbc.Driver&quot;);String url = &quot;jdbc:mysql://localhost:3306/test?characterEncoding=UTF8&quot;;Connection connection = DriverManager.getConnection(url, username, password);Statement stmt = connection.createStatement();Result result = stmt.executeUpdate(sql)..." }, { "title": "JDBC各大数据库的连接字符串和驱动类", "url": "/posts/geda-shujuku-lianjiechuan/", "categories": "Knowledge, JDBC", "tags": "JDBC", "date": "2020-12-02 05:47:00 +0000", "snippet": "OracledriverClass：oracle.jdbc.OracleDriverurl：jdbc:oracle:thin:@localhost:1521:dbnameMySQLdriverClass：com.mysql.jdbc.Driverurl: jdbc:mysql://localhost:3306/test?characterEncoding=utf8&amp;amp;useSSL=true // 注意: 高版本的MySQL需要显示指定useSSLDB2driverClass：com.ibm.db2.jcc.DB2Driverurl：jdbc:db2://localhost:..." }, { "title": "JDBC操作数据库出现中文乱码", "url": "/posts/caozuo-shujuku-chuxian-luanma/", "categories": "Knowledge, JDBC", "tags": "JDBC", "date": "2020-12-02 05:47:00 +0000", "snippet": "通过JDBC操作数据库表时，如果记录中有中文，可能会碰到乱码的问题。主要原因是字符编码（characterEncoding）不正确，包括以下几个方面： 在数据库服务器上创建表格时没有选择支持中文的编码方式； 建立JDBC连接时没有指明支持中文的编码方式；建议在创建表格和建立JDBC连接时都采用utf-8编码。具体方法如下： 创建数据库表时，选择character与collation时都选utf-8 建立JDBC连接时在url中加入characterEncoding=utf-8，以MySQL为例代码如下：Class.forName(&quot;com.mysql.jdbc.Driv..." }, { "title": "Windows下Docker打开新窗口报错", "url": "/posts/docker-dakai-xinchuangkou-baocuo/", "categories": "Knowledge, Docker", "tags": "Docker", "date": "2020-12-02 05:47:00 +0000", "snippet": "错误信息error during connect: Get http://%2F%2F.%2Fpipe%2Fdocker_engine/v1.26/containers/json: open //./pipe/docker_engine: The system cannot find the file specified. In the default daemon configuration on Windows, the docker client must be run elevated to connect. This error may also indicate that ..." }, { "title": "Solr精准查询", "url": "/posts/solr-jingzhun-chaxun/", "categories": "Knowledge, Solr", "tags": "Solr", "date": "2020-12-01 05:47:00 +0000", "snippet": "外面加上双引号，必须是双引号，就可以了。UserRealname : 某某家长// 改为UserRealname : &quot;某某家长&quot; " }, { "title": "Solr管理界面详解", "url": "/posts/solr-guanlijiemian-xiangjie/", "categories": "Knowledge, Solr", "tags": "Solr", "date": "2020-12-01 05:47:00 +0000", "snippet": "solr服务器管理界面可以查看系统状态、solr设置、分词检测、查询索引、增减core、查看日志等。1. Dashboard（仪表盘）访问http://localhost:8080/solr时，出现该主页面，可查看到Solr运行时间、Solr版本，系统内存、虚拟机内存的使用情况。2. Logging（日志）显示Solr运行出现的异常或错误。3. Core Admin（core管理）主要有Add Core（添加核心）， Unload（卸载核心），Rename（重命名核心），Reload（重新加载核心），Optimize（优化索引库）Add Core是添加core：主要是在instanceD..." }, { "title": "Solr复制域的作用", "url": "/posts/solr-fuzhiyu-de-zuoyong/", "categories": "Knowledge, Solr", "tags": "Solr", "date": "2020-12-01 05:47:00 +0000", "snippet": "复制域常用于多域搜索，如：电商项目中搜索商品，既要在名字域中搜索也要在描述域中搜索，传统的做法需要手工写两次，而solr想发送一次请求，可到两个域中搜索，为此，引入了复制域的概念，将两个域的域名复制到一个text文本域中。Solr复制域可以将多个索引字段结合到一起作为查询使用的域，逻辑上拓展了可查询对象的范围。将一个字段的值作为复制字段，给其设置新的数据类型，如数值类型，可以作为排序字段来使用，而不影像其模糊查询的效果。" }, { "title": "Solr查询语句", "url": "/posts/solr-chaxun-yuju/", "categories": "Knowledge, Solr", "tags": "Solr", "date": "2020-12-01 05:47:00 +0000", "snippet": "基本字段查询key:中国key:*中 // 结束值为“中”的值key:中* // 开始值为“中”的值key:*中* // 含有“中”的值强制不分词key:&#39;中国&#39;多字段与或关系 OR/ANDkey:(02 OR 10 OR 11 OR 12 )key:(02 AND 10 AND 11 AND 12 )key1:01 AND key2:02多字段不包含关系 NOTproduct_name:(* NOT 1) // 字段不含1product_name:(* NOT *1) // 字段结束时不为1product_name:(* NOT 1*) // 字..." }, { "title": "SQL中EXISTS的用法", "url": "/posts/sql-zhong-esists-de-yongfa/", "categories": "Knowledge, SQL", "tags": "SQL", "date": "2020-12-01 05:47:00 +0000", "snippet": "功能EXISTS用于检查子查询是否至少会返回一行数据，该子查询实际上并不返回任何数据，而是返回值True或False。EXISTS指定一个子查询，检测行的存在。EXISTS与IN的使用效率的问题，通常情况下采用EXISTS要比IN效率高，因为IN不走索引，但要看实际情况具体使用：IN适合于外表大而内表小的情况；EXISTS适合于外表小而内表大的情况。用法在插入记录前，需要检查这条记录是否已经存在，只有当记录不存在时才执行插入操作，可以通过使用 EXISTS 条件句防止插入重复记录。示例INSERT INTO TableIn (ANAME, ASEX)SELECT top 1 &#39;张..." }, { "title": "Firefox如何启用Pocket for Firefox", "url": "/posts/firefox-ruhe-qiyong-pocket/", "categories": "Knowledge, SOFTWARE", "tags": "SOFTWARE", "date": "2020-12-01 05:47:00 +0000", "snippet": " 在地址栏，输入about:config，然后按回车。 有时会出现警告页面。点击我了解此风险，请继续！，以打开about:config页面。 在偏好列表上面的搜索栏里输入pocket。 点击首选项extensions.pocket.enabled旁边的按钮设其值为true。 Pocket是Firefox的内置功能。此时，它会在地址栏中添加一个Pocket按钮，在我的足迹菜单里添加一个查看Pocket列表选项。" }, { "title": "数据库三范式", "url": "/posts/shujuk-sanfanshi/", "categories": "Knowledge, Database", "tags": "Database", "date": "2020-12-01 05:47:00 +0000", "snippet": "三范式解释1NF：字段不可分;原子性字段不可再分，否则就不是关系数据库; 2NF：有主键，非主键字段依赖主键;唯一性，一个表只说明一个事物; 3NF：非主键字段不能相互依赖;每列都与主键有直接关系，不存在传递依赖;不符合1NF的例子表字段1，字段2(字段2.1，字段2.2)，字段3 …… (关系数据库中create不出这样的表)存在问题因为设计不出这样的表，所以没有问题。不符合2NF的例子表学号，姓名，年龄，课程名称，成绩，学分这个表明显说明了两个事务:学生信息，课程信息存在问题 数据冗余，每条记录都含有相同信息； 删除异常：删除所有学生成绩，就把课程信息全删除了； 插入异常：学..." }, { "title": "转发和重定向的参数传递", "url": "/posts/zhuanfa-he-chongdingxiang-de-canshuchuandi/", "categories": "Knowledge, JSP", "tags": "JSP", "date": "2020-11-30 05:47:00 +0000", "snippet": "重定向跳转超链接标签&amp;lt;a&amp;gt;就是一种重定向跳转，这样的跳转request对象是传不到下一个页面的，下一个页面得到的request对象是一个新的对象，而不是上一个页面传过来的，得不到上一个页面的数据。如果你想通过这种方法跳转的话，那就要用&amp;lt;a href=&quot;a.jsp?参数名=参数值&quot;&amp;gt;传递参数，在下一个页面用request.getParameter(&quot;参数名&quot;)得到值。转发跳转这种跳转request对象会被传往下一个页面，可以用&amp;lt;jsp:forward page=&quot;/a.j..." }, { "title": "JSP页面拼装项目地址", "url": "/posts/jsp-yemian-pinzhuang-xiangmu-dizhi/", "categories": "Knowledge, JSP", "tags": "JSP", "date": "2020-11-30 05:47:00 +0000", "snippet": "&amp;lt;% String path = request.getContextPath(); String basePath = request.getScheme() + &quot;://&quot; + request.getServerName() + &quot;:&quot; + request.getServerPort() + path;%&amp;gt;&amp;lt;!-- JSP中引用地址 --&amp;gt;&amp;lt;%=basePath %&amp;gt;/TcService/insertTcService.controller" }, { "title": "静态包含和动态包含", "url": "/posts/jingtaibaohan-he-dongtaibaohan/", "categories": "Knowledge, JSP", "tags": "JSP", "date": "2020-11-30 05:47:00 +0000", "snippet": "区别 书写上不同静态包含：&amp;lt;%@include file=&quot;1.jsp&quot;%&amp;gt;动态包含：&amp;lt;jsp:include page=&quot;1.jsp&quot;&amp;gt;&amp;lt;/jsp:include&amp;gt;&amp;lt;%@include file=&quot;1.jsp&quot;%&amp;gt;是指令元素；&amp;lt;jsp:include page=&quot;1.jsp&quot;/&amp;gt;是行为元素。 最终编译成Java文件的数目不同静态包含在转换成为Ja..." }, { "title": "Chrome小恐龙", "url": "/posts/dino/", "categories": "Games", "tags": "Games", "date": "2020-11-29 05:47:00 +0000", "snippet": " " }, { "title": "2048", "url": "/posts/2048/", "categories": "Games", "tags": "Games", "date": "2020-11-29 05:47:00 +0000", "snippet": " 2048 最佳: 0 分数: 0 游戏结束🙈再试一次 重新启动游戏 " }, { "title": "Filter拦截中忽略指定url和资源", "url": "/posts/guolvqi-fangxing-zhiding-dizhi/", "categories": "Knowledge, Servlet", "tags": "Servlet", "date": "2020-11-26 05:47:00 +0000", "snippet": "web.xml中的配置&amp;lt;filter&amp;gt; &amp;lt;filter-name&amp;gt;SystemAuthorityFilter&amp;lt;/filter-name&amp;gt; &amp;lt;filter-class&amp;gt;platform.filter.SystemAuthorityFilter&amp;lt;/filter-class&amp;gt; &amp;lt;init-param&amp;gt; &amp;lt;param-name&amp;gt;IGNORE_URL&amp;lt;/par..." }, { "title": "Git检出和提交代码至远程仓库", "url": "/posts/git-ruhe-jianchu-he-tijiao-daima/", "categories": "Knowledge, Git", "tags": "Git", "date": "2020-11-26 05:47:00 +0000", "snippet": "我们使用Git需要先安装Git工具，这里给出下载地址：https://git-for-windows.github.io/从远程仓库检出代码找到自己在GitHub上的代码仓库，点击Clone or dowload会出现一个地址，复制这个地址备用。 打开我的电脑，选择一个盘，比如F盘，右键空白处点击git bash here，打开命令行。输入如下命令，克隆Test repository到Test文件夹中git clone https://github.com/JiayiLi/Test.git # 地址替换成你之前复制的地址将代码推送到远程仓库将要提交的文件复制粘贴至F盘的Test文件夹中..." }, { "title": "Java中使用FreeMarker导出Word文档", "url": "/posts/java-shiyong-freemarker-shengcheng-word-wendang/", "categories": "Knowledge, FreeMarker", "tags": "FreeMarker", "date": "2020-11-26 05:47:00 +0000", "snippet": "制作模板在制作模板时需要注意的一些问题如下： 用Microsoft Office Word 2003或以上的版本来制作，不要用WPS做。 关于图片，一定要插入一张图片，方便后面找到图片的位置好进行替换。 一些需要动态生成的数据，如个人信息，用personInfo（其他字段也行，建议和程序中的VO字段对应）来代替，注意，单词要先用一个文本框写好，再复制黏贴过来，不要在Word上手动敲，不然再转成xml时单词会被拆散，也不要直接黏贴过来一个${personInfo}，还是会被拆散，最好直接黏贴一个单词过来，在xml中再找到这个单词再添加${}。 表格只需要画一行，循环在xml中配置。..." }, { "title": "FreeMarker如何格式化数字", "url": "/posts/freemarker-geshihua-shuzi/", "categories": "Knowledge, FreeMarker", "tags": "FreeMarker", "date": "2020-11-26 05:47:00 +0000", "snippet": "// 如果小数点后不足两位，用&quot;0&quot;代替${num?string(&#39;0.00&#39;)} // 输出为：1239765.46 // 如果小数点后多余两位，就只保留两位，否则输出实际值 ${num?string(&#39;#.##&#39;)} // 输出为：1,239,765.46 // 整数部分每三位用&quot;,&quot;分割，并且保证小数点后保留两位，不足用&quot;0&quot;代替${num?string(&#39;,###.00&#39;)} // 输出为：1,239,765.46 // 整数部分每三位用&quot;,&quot;分割，并且..." }, { "title": "Bitbucket-4.10.1安装和破解", "url": "/posts/bitbucket-anzhuang-he-pojie/", "categories": "Knowledge, Bitbucket", "tags": "Bitbucket", "date": "2020-11-26 05:47:00 +0000", "snippet": "需要安装的环境有：jdk、mysql、git安装官网下载Bitbucket的安装包atlassian-bitbucket-4.10.1-x64.bin，运行安装程序，系统默认http端口为7990，服务端口为8006，安装时可以根据自己需要重新输入，安装成功后，启动服务，可以通过http://localhost:7990访问。破解停止服务，并上传文件atlassian-extras-decoder-v2-3.3.0.jar和atlassian-extras-legacy-3.3.0.jar，路径为atlassian/bitbucket/4.10.1/atlassian-bitbucket..." }, { "title": "微信公众号自动应答的实现", "url": "/posts/weixin-zidong-yingda/", "categories": "Knowledge, WeChat", "tags": "WeChat, Learning", "date": "2020-11-25 05:47:00 +0000", "snippet": "开发主要分为以下几个步骤： 申请测试公众号 配置服务器地址 验证服务器地址的有效性 接收消息，回复消息申请测试公众号 记录：不知道如何使用微信公众号进行调试，百度了很多资料，发现微信公众平台提供了相当好的测试工具，这是一个模拟的公众号，我们可以用自己的微信关注该公众号，然后进行接口调试。第一步首先要申请一个测试的微信公众号，便于调试，地址：https://mp.weixin.qq.com/debug/cgi-bin/sandbox?t=sandbox/login配置服务器地址在测试号页面上有接口配置信息选项，在这个选项下面进行配置：有两个配置项：服务器地址（URL），Token..." }, { "title": "对微信服务器发送来的报文解密时报错：illegal Key Size", "url": "/posts/jiemi-shi-baocuo/", "categories": "Knowledge, WeChat", "tags": "WeChat", "date": "2020-11-25 05:47:00 +0000", "snippet": "问题在加密解密时遇到这个问题：java.security.InvalidKeyException:illegal Key Size问题原因这是因为微信在进行数据传输的时候，会进行加密，微信使用的AES加密是256位，Java默认使用的解密包是local_policy.jar和US_export_policy.jar，但是这个默认的只支持128位的解密(java版本在1.8.0_161之后就没有这个问题了，默认是支持)。我们的版本低于1.8.0_161，默认是只支持128位的解密。解决办法 到这里选择下载Java Cryptography Extension (JCE) Unlimite..." }, { "title": "使用Excel生成SQL语句", "url": "/posts/shiyong-excel-shengcheng-sql/", "categories": "Knowledge, SQL", "tags": "SQL", "date": "2020-11-25 05:47:00 +0000", "snippet": "&quot;update TEST_TABLE set co1=&#39;&quot;&amp;amp;A1&amp;amp;&quot;&#39;, co2=&#39;&quot;&amp;amp;B1&amp;amp;&quot;&#39;, co3=&#39;&quot;&amp;amp;C1&amp;amp;&quot;&#39; where co4=&#39;&quot;&amp;amp;D1&amp;amp;&quot;&#39;&quot;" }, { "title": "查询数据库所有表的所有字段", "url": "/posts/chaxun-suoyoubiao-de-suoyou-ziduan/", "categories": "Knowledge, SQL", "tags": "SQL", "date": "2020-11-25 05:47:00 +0000", "snippet": "MySQL数据库SELECT table_name, column_nameFROM information_schema. COLUMNSWHERE table_schema = &#39;testdb&#39;AND table_name IN ( SELECT TABLE_NAME FROM INFORMATION_SCHEMA. TABLES WHERE TABLE_SCHEMA = &#39;testdb&#39;)ORDER BY table_name, column_nameOracle数据库SELECT A .table_name, A .COLUMN_NAMEFR..." }, { "title": "Linux中查看进程的端口号，查看哪个进程占用了该端口", "url": "/posts/linux-duankoujijincheng/", "categories": "Knowledge, Linux", "tags": "Linux", "date": "2020-11-25 05:47:00 +0000", "snippet": "知道进程，查看进程的端口号[root@localhost ~]# ps -ef|grep ssh961 ? 00:00:00 sshd...[root@localhost ~]# netstat -anp|grep 961tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 961/sshd ... 查看哪个进程占用了某个端口[root@localhost ~]# netstat -anp|grep 22tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 961..." }, { "title": "查看当前目录下文件及文件夹的大小", "url": "/posts/linux-chakan-dangqian-mulluxia-wenjian-daxiao/", "categories": "Knowledge, Linux", "tags": "Linux", "date": "2020-11-25 05:47:00 +0000", "snippet": "# 查看当前目录下各个文件及目录占用空间大小du -sh *# 按兆（M）来排序du -sh * | sort -rn" }, { "title": "Git切换远程仓库地址", "url": "/posts/git-qiehuan-yuancheng-cangku-dizhi/", "categories": "Knowledge, Git", "tags": "Git", "date": "2020-11-25 05:47:00 +0000", "snippet": "Git仓库的服务器IP地址变了，本地代码挺多，重新检出太占时间，可以修改一个什么配置让本地仓库和新的远程仓库建立关联吗， 答案是肯定的！方式一：修改远程仓库地址git remote -v # 查看当前远程仓库地址git remote set-url origin &amp;lt;new url&amp;gt; # 修改远程地址为新的地址 &amp;lt;new url&amp;gt; 改为新的地址方式二：先删除远程仓库地址，然后再添加git remote -v # 查看当前远程仓库地址git remote rm origin # 删除现有远程仓库git remote add or..." }, { "title": "Git推送代码时报错：error:src refspec master does not match any", "url": "/posts/git-push-baocuo/", "categories": "Knowledge, Git", "tags": "Git", "date": "2020-11-25 05:47:00 +0000", "snippet": "将git push origin master 改成git push origin HEADHEAD指向当前工作的branch，master不一定指向当前工作的branch" }, { "title": "如何防止U盘拷贝", "url": "/posts/ruhe-fangzhi-youpan-kaobei/", "categories": "Knowledge, SECURITY", "tags": "SECURITY", "date": "2020-11-24 05:47:00 +0000", "snippet": "拒绝移动存储权限gpedit.msc——用户配置——管理模板——系统——可移动存储访问——所有可移动存储类——拒绝所有权限——已启用隐藏右键send to删除SendTo文件夹HKEY_CLASSES_ROOT\\AllFilesystemObjects\\shellex\\ContextMenuHandlers\\SendTo添加磁盘写保护HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\storagedevicepolicies解除写保护：writeprotect”=dword:00000000添加写保护：writeprotect”=dw..." }, { "title": "常用DOS命令", "url": "/posts/changyong-dos-mingling/", "categories": "Knowledge, DOS", "tags": "DOS", "date": "2020-11-24 05:47:00 +0000", "snippet": "calc -----------启动计算器 control --------打开控制面板 cleanmgr -------磁盘清理eventvwr -------事件查看器mplayer2 -------简易widnowsmediaplayer Sndvol32 -------音量控制程序 mmc ------------打开控制台write ----------写字板dfrg.msc -------磁盘碎片整理程序compmgmt.msc ---计算机管理 diskmgmt.msc ---磁盘管理实用程序gpedit.msc -----组策略 lusrmgr.msc ----本机..." }, { "title": "颜色搭配", "url": "/posts/yanse-dapei/", "categories": "Design, Mutual", "tags": "Mutual", "date": "2020-11-24 05:47:00 +0000", "snippet": "" }, { "title": "交互按钮设计", "url": "/posts/jiaohu-anniu-sheji/", "categories": "Design, Mutual", "tags": "Mutual", "date": "2020-11-24 05:47:00 +0000", "snippet": "" }, { "title": "算法复杂度速查表", "url": "/posts/suanfa-fuzadu-suchabiao/", "categories": "Collection, Technical", "tags": "Technical", "date": "2020-11-24 05:47:00 +0000", "snippet": "这篇文章覆盖了计算机科学里面常见算法的时间和空间的大O复杂度图例数据结构操作数组排序算法图操作堆操作大O复杂度图表" }, { "title": "Spring Boot @Transactional注解不起作用的两种情况", "url": "/posts/shiwu-buqizuoyong-de-liangzhong-teshu-qingkuang/", "categories": "Knowledge, Spring Boot", "tags": "Spring Boot", "date": "2020-11-18 05:47:00 +0000", "snippet": "1、事务的回滚仅仅对于unchecked的异常有效注解为事务范围的方法中，事务的回滚仅仅对于unchecked的异常有效。对于checked异常无效。也就是说事务回滚仅仅发生在出现RuntimeException或Error的时候。如果希望一般的异常也能触发事务回滚，需要在注解了@Transactional的方法上，将@Transactional回滚参数设为：@Transactional(rollbackFor = Exception.class)2、 Service类内部方法调用大概就是Service中有一个方法A，会内部调用方法B， 方法A没有事务管理，方法B采用了声明式事务，通过在..." }, { "title": "激活Windows7提示系统保留分区未分配驱动器号", "url": "/posts/win7-jihuo-tishi-weifenpei-qudongqihao/", "categories": "Knowledge, SYSTEM", "tags": "SYSTEM", "date": "2020-11-18 05:47:00 +0000", "snippet": " 鼠标右键点击桌面的“计算机”图标，选择“管理”项 在“计算机管理”窗中，选择“磁盘管理”项，点击打开 找到磁盘大小为“100M”的那个分区 鼠标右键，然后选择“更改驱动器号和路径”，进行驱动器号的设置 然后点击“添加”，选择一个可用的驱动号，比如这里选择“H”即可，然后点击“确定”完成 然后出现添加成功的信息 接下来，点击Windows7“激活”按钮，完成系统的激活即可" }, { "title": "CSS实现文字下面波浪线", "url": "/posts/geiwenzi-jia-bolangxian/", "categories": "Knowledge, CSS", "tags": "CSS", "date": "2020-11-18 05:47:00 +0000", "snippet": "方法1.使用径向渐变绘制波浪线一个波浪线循环段是有一个朝上的半个圆弧和一个朝下的半个圆弧组合而成的。所以，我们只要使用径向渐变绘制圆弧，再通过background-position控制两个圆弧的位置，让其前后拼接在一起就可以实现波浪线效果。&amp;lt;style type=&quot;text/css&quot;&amp;gt;.flow-wave { background: radial-gradient(circle at 10px -7px, transparent 8px, currentColor 8px, currentColor 9px, transparent ..." }, { "title": "为什么越学反而越蠢", "url": "/posts/20201118/", "categories": "Collection, Reading", "tags": "Reading", "date": "2020-11-18 05:47:00 +0000", "snippet": "先给你讲个故事，看你有没有中招有一天，你的朋友给你“知识装逼”了一个术语，他推给你一个公众号，你开始关注，觉得哇！大神！长见识！每天刷每天刷每天刷。很多问题也有了解决方法——按照这个进度，过3年就能理解宇宙终极奥义了，慢慢你有了十多个类似的号，承包了你从专业、生活、工作、跑步、减肥、饮食、情感关系……等等所有的领域，有点看不过来的你决定提高效率碎片化学习！利用一切碎片时间，上地铁看一篇，吃饭时看一篇，睡前刷2篇。眼睛看不完，用音频刷，平时看不完，跑步还能刷，但是，还是刷不完！还好有收藏功能，全收藏！这也叫“ 松鼠症 ” —— 不断攒不断攒不断攒……等到收藏超过100篇未读的时候，你终于发..." }, { "title": "MyBatis如何传入多个参数", "url": "/posts/mybatis-chuanru-duoge-canshu/", "categories": "Knowledge, MyBatis", "tags": "MyBatis", "date": "2020-11-17 05:47:00 +0000", "snippet": "单个参数javapublic List&amp;lt;Test&amp;gt; getTestList(String id);xml&amp;lt;select id=&quot;getTestList&quot; parameterType=&quot;java.lang.String&quot; resultType=&quot;com.test.Test&quot;&amp;gt;　　select t.* from test t where t.id=#{id}&amp;lt;/select&amp;gt;多个参数使用索引javapublic List&amp;lt;Test&am..." }, { "title": "月入10万，难吗？", "url": "/posts/20201117/", "categories": "Collection, Reading", "tags": "Reading", "date": "2020-11-17 05:47:00 +0000", "snippet": "前面说过：赚钱，就是你付出一定的成本，换来一定的回报。归根到底，大家都是出来卖的，无非通过四种方式： 卖信息（中介） 卖钱（投资） 卖他人的注意力（直播） 卖自己的时间（服务）1、卖自己的时间大多数人都靠处在卖自己的时间赚钱这个阶段。没本金、没人脉，只有时间，就只能靠时间来赚钱。也许你学了很多的专业知识，到头来加班加到死，也不过每个月就几千一万的。由于处在这个状态的人太多，竞争太过于激烈，以至于在面对企业时几乎没什么议价能力，只能任人宰割。少部分聪明一点的人通过学习进修升职的方式来增加自己的劳动效率，增加自己的时间单价，能多赚一点。大部分的人就只能靠加班来增加收入。那些凌晨就出来..." }, { "title": "访问http://localhost:8080不能显示Tomcat页面", "url": "/posts/buneng-xianshi-tomcat-yemian/", "categories": "Knowledge, Tomcat", "tags": "Tomcat", "date": "2020-11-16 05:47:00 +0000", "snippet": "排查 确认Tomcat正常安装 确认环境变量配置无误 确认地址无误：http://localhost:8080/ 确认这些都是无误的情况下，还是不能访问，就要进一下Tomcat路径下的webapps文件夹下查看是否有ROOT文件夹，这个是Tomcat默认的web项目原因部署项目出错的话，把webapps目录下文件夹清空了，重新部署，这样就附带的把ROOT文件夹清理掉了，所以就显示不了解决方法重新安装一下，或者找到ROOT文件夹复制过来就能正常访问了" }, { "title": "SVN客户端如何修改登陆账号", "url": "/posts/svn-kehuduan-xiugai-denglu-zhanghao/", "categories": "Knowledge, SVN", "tags": "SVN", "date": "2020-11-16 05:47:00 +0000", "snippet": "首先找到一个空白地方.右键单击,找到如图的菜单(例如桌面)进入svn的设置界面出现清除框.选择你要清除的.确定即可. 下次你再用svn提交代码的时候.就会提示你输入用户名和密码了" }, { "title": "SVN插件如何修改登录账号", "url": "/posts/svn-chajian-xiugai-denglu-zhanghao/", "categories": "Knowledge, SVN", "tags": "SVN", "date": "2020-11-16 05:47:00 +0000", "snippet": "打开Window菜单栏中的Perference，打开Eclipse配置，搜索框输入svn，然后点击SVN，找到下方SVN接口，查看下svn是什么类型的接口，如果是JavaHL打开我的电脑\\系统安装盘\\用户 打开之后，在搜索栏里面输入auth 找到这个文件夹之后打开，然后删除这个文件夹里面的文件，重启Eclipse，使用svn的时候就会要求重新输入账号密码了Eclipse的svn类型一般为JavaHL类型，路径在C:\\Users\\Administrator\\AppData\\Roaming\\Subversion\\auth，要是实在找不到可以全局搜索在C盘如果svn的接口类型是SVNKit，则..." }, { "title": "Oracle 使用SQL语句对索引的操作", "url": "/posts/oracle-chuangjian-suoyin/", "categories": "Knowledge, Oracle", "tags": "Oracle", "date": "2020-11-15 05:47:00 +0000", "snippet": "创建索引-- 创建索引create index index_name on table_name(column_name) ;-- 创建联合索引create index index_name on table_name(column_name1, column_name2) ;使用索引-- 使用索引select * from table_name where column_name = 1;" }, { "title": "使用Ajax方式实现form表单的提交", "url": "/posts/ajax-shixian-form-biaodan-tijiao/", "categories": "Knowledge, Ajax", "tags": "Ajax", "date": "2020-11-15 05:47:00 +0000", "snippet": "在使用form表单的时候,一旦点击提交触发submit事件，一般会使得页面跳转，页面间的跳转等行为的控制权往往在后端，后端会控制页面的跳转及数据传递，但是在某些时候不希望页面跳转，或者说想要将控制权放在前端，通过js来操作页面的跳转或者数据变化。一般这种异步的操作，我们都会想到Ajax方式，因此在实现了功能后就整理了这篇文章，通过Ajax方式实现form表单的提交并进行后续的异步操作。常见的form表单提交方式&amp;lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&amp;gt;&am..." }, { "title": "Oracle 如何查询CLOB字段的值", "url": "/posts/chaxun-clob-ziduan/", "categories": "Knowledge, Oracle", "tags": "Oracle", "date": "2020-11-12 05:47:00 +0000", "snippet": "select dbms_lob.substr(column) from table_name;select to_char(column) from table_name;错误发生场景在对视图中的CLOB进行TO_CHAR处理后，在CLOB字段录入字段信息小于4000字符时，查询正常，但当录入字符大于4000字符时，就会发生错误。错误提示：ORA-22835:缓冲区对于CLOB到CHAR转换或BLOB到RAWZ转换而言太小。原因分析在对CLOB进行的TO_CHAR处理，可以理解为将CLOB中存储的信息转换成VARCHAR2，然后再进行展现，对于VARCHAR2来言，最多存储4000个字符..." }, { "title": "NPM命令", "url": "/posts/npm-mingling/", "categories": "Knowledge, NodeJS", "tags": "NodeJS", "date": "2020-11-12 05:47:00 +0000", "snippet": "NPM是随同NodeJS一起安装的包管理工具,能解决NodeJS代码部署上的很多问题，常用的命令有： 清除缓存 npm cache clean --force 显示配置列表 npm config list 淘宝镜像的安装 npm config set registry &quot; https://registry.npm.taobao.org &quot; npm config set disturl https://npm.taobao.org/dist 淘宝镜像的卸载 npm config set disturl ..." }, { "title": "Windows非服务模式下如何启动和关闭MySQL数据库", "url": "/posts/feifuwu-moshi-xia-qidong-he-guanbi-mysql/", "categories": "Knowledge, MySQL", "tags": "MySQL", "date": "2020-11-11 05:47:00 +0000", "snippet": "启动mysqld --standalone关闭mysqladmin -uroot -proot shutdown" }, { "title": "&lt; c:forEach&gt;遍历list数组时怎么取出元素下标", "url": "/posts/qu-shuzu-xiabiao/", "categories": "Knowledge, JSTL", "tags": "JSTL", "date": "2020-11-11 05:47:00 +0000", "snippet": "&amp;lt;c:forEach var=&quot;o&quot; items=&quot;${orders }&quot; varStatus=&quot;st&quot;&amp;gt;当前迭代的元素：${o.ord_code} 当前迭代的元素：${st.current.ord_code}当前迭代的索引：${st.index} 迭代计数：${st.count}是否是第一次迭代：${st.first} 是否是最后次迭代：${st.last} 示例&amp;lt;c:forEach var=&quot;cost&quot; items=&quot;${otherCost}&quot;..." }, { "title": "&lt; c:forEach&gt;如何终止循环", "url": "/posts/jstl-de-tiaojian-panduan/", "categories": "Knowledge, JSTL", "tags": "JSTL", "date": "2020-11-11 05:47:00 +0000", "snippet": "&amp;lt;c:set var=&quot;exitId&quot; value=&quot;0&quot;/&amp;gt;&amp;lt;c:forEach items=&quot;${opinions }&quot; var=&quot;map&quot; varStatus=&quot;status&quot;&amp;gt; &amp;lt;c:if test=&quot;${exitId eq &#39;0&#39;}&quot;&amp;gt;&amp;lt;!--for循环里面的操作都写在c:if中--&amp;gt; &amp;lt;td&amp..." }, { "title": "JQuery的正则匹配", "url": "/posts/jquery-de-zhengze-pipei/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-11-11 05:47:00 +0000", "snippet": "[属性名称] 匹配包含给定属性的元素[att=value] 匹配包含给定属性的元素 (大小写区分)[att*=value] 模糊匹配[att!=value] 不能是这个值[att$=value] 结尾是这个值[att^=value] 开头是这个值[att1][att2][att3]... 匹配多个属性条件中的一个例：JQuery获取class=”abc”的input值$(&#39;input[class=&quot;abc&quot;]&#39;).val();" }, { "title": "Ajax案例", "url": "/posts/ajax-anli/", "categories": "Knowledge, Ajax", "tags": "Ajax", "date": "2020-11-11 05:47:00 +0000", "snippet": "function queryPasswordById(pass_id) { var params = { pass_id : pass_id }; var param = JSON.stringify(params); // 加密 // var requestJson1 = btoa(encodeURIComponent(param)); $.ajax({ url : &quot;password/queryPasswordById&quot;, type : &quot;post&quot;, ..." }, { "title": "Windows7刷新环境变量的方法", "url": "/posts/win7-shuaxin-huanjingbianliang/", "categories": "Knowledge, SYSTEM", "tags": "SYSTEM", "date": "2020-11-10 05:47:00 +0000", "snippet": "在“我的电脑”-&amp;gt;“属性”-&amp;gt;“高级”-&amp;gt;“环境变量”中增加或修改环境变量后，需重启系统才能使之生效。有没有什么方法可让它即时生效呢？ 下面介绍一种方法： 　　 以修改环境变量“PATH”为例，修改完成后，进入DOS命令提示符，输入：set PATH=C:，关闭DOS窗口。再次打开DOS窗口，输入：echo %PATH% ，可以发现“我的电脑”-&amp;gt;“属性”-&amp;gt;“高级”-&amp;gt;“环境变量”中设置的PATH值已经生效。 　　不用担心DOS窗口中的修改会影响环境变量的值，DOS窗口中的环境变量只是Window..." }, { "title": "Windows10安装陷入无限循环", "url": "/posts/win10-anzhuang-xianru-wuxian-xunhuan/", "categories": "Knowledge, SYSTEM", "tags": "SYSTEM", "date": "2020-11-10 05:47:00 +0000", "snippet": "故障描述当你安装Windows10到了系统初始化设置界面时，电脑会一遍又一遍地让你进行相同的设置解决方案1、按Ctrl + Shift + F3跳过OOBE（Out-of-box experience）直接进入系统2、进入系统的过程中，会弹出一个错误窗口，上面写着：应用程序无法正常启动0xc00001423、点击确定，之后应该会出现一个系统准备工具，不用管它4、进去之后你就会发现，这是一个残废的系统5、打开“命令提示符”窗口输入字符串命令sfc/scannow回车，之后就是耐心等待命令程序对每个系统文件搜索扫描，然后修复6、上面这些完成后，重启电脑就可以了名称解释：OOBE开箱体验（OO..." }, { "title": "Outlook邮箱启动时提示找不到Outlook.pst文件", "url": "/posts/outlook-youxiang-qidong-baocun/", "categories": "Knowledge, SOFTWARE", "tags": "SOFTWARE", "date": "2020-11-10 05:47:00 +0000", "snippet": "什么是pst文件pst文件是outlook的数据文件，包括邮箱账号的所有信息，比如：收到的邮件，发出的邮件，联系人信息等等。pst文件找不到的主要原因是pst文件被删除，文件路径被修改，或者被移动到其他地方。解决方法1、打开“命令提示符”窗口，使用cd命令切换到“Outlook.exe”所在安装目录2、输入命令outlook /importprf ..prf初始化Outlook数据文件3、初始化完成后即可进入outlook邮箱" }, { "title": "Google Play Store显示“从服务器检索信息时出错，DF-DFERH-01”", "url": "/posts/google-play-store-DF-DFERH-01/", "categories": "Knowledge, SOFTWARE", "tags": "SOFTWARE", "date": "2020-11-10 05:47:00 +0000", "snippet": "原因是软件要请求的services.googleapis.cn域名被解析到了国内。解决思路就是将该域名解析到国外即可，若是采用代理软件，设置为全局代理。" }, { "title": "Eclipse常用快捷键", "url": "/posts/eclipse-changyong-kuaijiejian/", "categories": "Knowledge, Eclipse", "tags": "Eclipse", "date": "2020-11-10 05:47:00 +0000", "snippet": "Ctrl + Alt + H 查看一个类的方法被哪些其他的类调用Ctrl + Shift + l 快捷键提示 Ctrl + Shift + R 搜索 Ctrl + 2 + l 自动生成变量名声明(按方法返回值为本地变量赋值），注：Ctrl和2同时按完以后释放，再按l" }, { "title": "透过上层div点击下层的元素", "url": "/posts/touguo-shangceng-div-dianji-xiaceng/", "categories": "Knowledge, CSS", "tags": "CSS", "date": "2020-11-10 05:47:00 +0000", "snippet": "pointer-events: none;" }, { "title": "鼠标指针变成禁止点击的样式", "url": "/posts/shubiao-zhizhen-biancheng-jinzhi-dianji/", "categories": "Knowledge, CSS", "tags": "CSS", "date": "2020-11-10 05:47:00 +0000", "snippet": "/* 是一个红色的圈加一个斜杠，表示禁止的意思 */cursor:no-drop cursor:not-allowed " }, { "title": "Bootstrap悬浮窗口(popover)", "url": "/posts/bootstrap-xuanfuchuang/", "categories": "Knowledge, Bootstrap", "tags": "Bootstrap", "date": "2020-11-10 05:47:00 +0000", "snippet": "&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;head&amp;gt; &amp;lt;meta charset=&quot;utf-8&quot;&amp;gt; &amp;lt;title&amp;gt;悬浮窗口&amp;lt;/title&amp;gt; &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;css/bootstrap.min.css&quot; /&amp;gt; &amp;lt;!--JavaScript插件都是依赖jQue..." }, { "title": "对String进行强制转码", "url": "/posts/dui-string-jinxing-qiangzhi-zhuanma/", "categories": "Knowledge, Java", "tags": "Java", "date": "2020-11-10 03:47:00 +0000", "snippet": "String test = new String(object.getTest().getBytes(&quot;ISO-8859-1&quot;), &quot;UTF-8&quot;);" }, { "title": "SQl格式化工具", "url": "/posts/sql-geshihua-gongju/", "categories": "Tools", "tags": "Tools", "date": "2020-10-27 05:47:00 +0000", "snippet": " SQL-Format ..." }, { "title": "Java线程的生命周期", "url": "/posts/xiancheng-de-shengming-zhouqi/", "categories": "Knowledge, Java", "tags": "Java", "date": "2020-10-27 05:47:00 +0000", "snippet": "Java线程的生命周期" }, { "title": "获取客户端的IP地址", "url": "/posts/huoqu-kehuduan-ip/", "categories": "Knowledge, Java", "tags": "Java", "date": "2020-10-27 05:47:00 +0000", "snippet": "public String getIpAddr(HttpServletRequest request) { String ip = &quot;&quot;; try { ip = request.getHeader(&quot;x-forwarded-for&quot;); if (ip == null || ip.length() == 0 || &quot;unknown&quot;.equalsIgnoreCase(ip)) { ip = request.getHeader(&quot;Proxy-Client-IP&..." }, { "title": "使用gitbook serve命令报错", "url": "/posts/gitbook-bao-cuo/", "categories": "Knowledge, GitBook", "tags": "GitBook", "date": "2020-10-27 05:47:00 +0000", "snippet": "错误信息在使用gitbook serve启动服务时报错：Error: ENOENT: no such file or directory, stat ‘C:***demo_book_book\\gitbook\\gitbook-plugin-fontsettings\\fontsettings.js’ 原因这一个Bug（Vesion：3.2.3）https://github.com/GitbookIO/gitbook/issues/1309解决办法用户目录下找到以下文件.gitbook\\versions\\3.2.3\\lib\\output\\website\\copyPluginAssets.js..." }, { "title": "GitBook安装", "url": "/posts/gitbook-anzhuang/", "categories": "Knowledge, GitBook", "tags": "GitBook", "date": "2020-10-27 05:47:00 +0000", "snippet": "1.搭建Nodejs环境前往Node.js官网下载最新版Nodejs windows系统安装包安装成功后再cmd窗体中输入node -v查看是否安装成功2.安装GitBook可视化编写工具 GitBook Editor Windows版 Visual Studio Code下载Markdown All in One插件 Typora3.安装GitBook在任意目录下运行cmd控制台 输入:npm install gitbook-cli -g进行安装4.开始使用GitBookrem 初始化gitBookgitbook initrem 下载gitBook插件 gitbook insta..." }, { "title": "界面动效设计", "url": "/posts/jiemian_dongxiao_sheji/", "categories": "Design, Mutual", "tags": "Mutual", "date": "2020-10-27 05:47:00 +0000", "snippet": "趣味交互动效趣味音量调节动效 by.ALEX BENDER点赞按钮动效 by.Aaron Iker趣味捐赠按钮动画 by.Aaron IkerBUTTON V2 by.Aaron Iker项目管理APP完成动效 by.Leonid Arestov一组可爱的标签栏交互动效 by.Dimest压缩文件动画 by.Aaron IkerAR拍照应用标签栏交互设计 by.Oleg Frolov创意举重提交按钮 by.Aaron IkerFILTER UX by.Yurii家居装修应用动效设计 by.YanBin Tan引导页3D动画 by Minh Pham ✪响应式HTM..." }, { "title": "App界面设计欣赏", "url": "/posts/app-sheji-xinshang/", "categories": "Design, Mutual", "tags": "Mutual", "date": "2020-10-27 05:47:00 +0000", "snippet": "" }, { "title": "布里萨戈群岛旅游LOGO", "url": "/posts/bu-li-sa-ge-qun-dao/", "categories": "Design, Logo", "tags": "Logo", "date": "2020-10-27 05:47:00 +0000", "snippet": "布里萨戈群岛（Isole di Brissago）位于瑞士南部的马焦雷湖，靠近瑞士城镇布里萨戈，是一组由两个岛屿组成的小岛，较大的岛屿（圣潘克拉齐奥）占地25568平方米，较小的岛屿（圣阿波利奈尔）占地8186平方米。其中大岛上有著名的植物园，它由安托瓦内特·圣莱热男爵夫人于1885年创建，园内拥有超过2000多种亚热带植物，具有重要的科学研究价值，吸引了大批专家和植物爱好者前往参观。今年3月份，受到疫情的影响，布里萨戈群岛临时关闭了旅游入口。上周，该岛屿宣布将重新向公众开放。与此同时，布里萨戈群岛还重新设计了旅游LOGO来宣传群岛的旅游文化。由于群岛最显著的特点是由两个小岛组成，所以在..." }, { "title": "博客系统 Halo", "url": "/posts/halo/", "categories": "Collection, Storage", "tags": "Storage", "date": "2020-10-27 05:47:00 +0000", "snippet": "Halo是一款使用 Spring Boot 框架搭建的现代化的个人开源博客系统。该系统具有完备的 Markdown 编辑器以及文章、页面系统，包含分类/标签/预览图，附件管理，评论系统，主题系统，系统设置等功能。提供的功能halo 博客主站，用来展示我们发布的博客及其他我们编辑的内容。后台管理（halo-admin），用来管理维护我们的博客。评论插件（halo-comment），用来给我们的博客添加评论模块。主题库（halo-theme-* ），提供众多博客主题模版。预览链接官网：https://halo.run/Github：https://github.com/halo-dev/halo" }, { "title": "静态博客写作客户端 Gridea", "url": "/posts/gridea/", "categories": "Collection, Storage", "tags": "Storage", "date": "2020-10-27 05:47:00 +0000", "snippet": "当下大多数人可能已经对 Github Pages 不再陌生，他是很多喜欢写文章的人第一次接触的用于免费搭建 Blog 的工具，使用 Github Pages 你能很快速的构建一个简洁却又不失优雅的个人 Blog ，直到现在互联网上还有大量的基于 Github Pages 的个人博客和搭建方法的教程。然而搭建虽然简单，但是管理和上传文章却相对麻烦不少，官方的教程里，你需要经历繁琐的 Git 步骤才能发布一篇文章和修改你的个人空间界面。对于那些想更便捷和优雅的操作 Github Pages 写作者来说，我郑重推荐这款工具 Gridea。Gridea提供Mac 、Windows 、Linux ..." }, { "title": "后台管理系统 Dcat Admin", "url": "/posts/dcat-admin/", "categories": "Collection, Storage", "tags": "Storage", "date": "2020-10-27 05:47:00 +0000", "snippet": "Dcat Admin是一个基于laravel-admin二次开发而成的后台系统构建工具，只需很少的代码即可快速构建出一个功能完善的高颜值后台系统。内置丰富的后台常用组件，开箱即用，让开发者告别冗杂的HTML代码，对后端开发者非常友好。更新内容Dcat Admin v1.2.0已发布，更新内容如下：功能新增及优化部分 集成editor-md作为内置markdown编辑器，并支持图片上传功能 表格过滤搜索增加panel布局方式 优化数据表格边框模式 工具表单增加buildSuccessScript方法 数据表格表头过滤器重置按钮优化 通过Form::action法设置url时自动..." }, { "title": "密码管理软件 Bitwarden", "url": "/posts/bitwarden/", "categories": "Collection, Storage", "tags": "Storage", "date": "2020-10-27 05:47:00 +0000", "snippet": "特性 提供免费和付费选择 适用于团队（企业）和个人 开源 支持自托管 能够作为身份验证器应用（如 Google 身份验证器） 跨平台支持（安卓、iOS、Linux、Windows 和 macOS） 提供浏览器扩展（Firefox,、Chrome、Opera、Edge、Safari） 提供命令行工具 提供网页保管库 能够导入/导出密码 密码生成器 自动填充密码 两步身份验证下载地址https://bitwarden.com/" }, { "title": "去哪儿网机票搜索系统的高并发架构设计", "url": "/posts/20201028/", "categories": "Collection, Reading", "tags": "Reading", "date": "2020-10-27 05:47:00 +0000", "snippet": "" }, { "title": "生成随机id", "url": "/posts/shengcheng-suiji-id/", "categories": "Knowledge, Java", "tags": "Java", "date": "2020-10-27 05:23:00 +0000", "snippet": "// 需要引入import java.util.UUID包public static String getUUID() { UUID uuid = UUID.randomUUID(); String str = uuid.toString(); String uuidStr = str.replace(&quot;-&quot;, &quot;&quot;); return uuidStr;}" }, { "title": "HTML元素禁用的方法", "url": "/posts/html-jinyong-yuansu/", "categories": "Knowledge, HTML", "tags": "HTML", "date": "2020-10-27 05:23:00 +0000", "snippet": "禁用radio，设置为只读，不能选定&amp;lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;1&quot; disabled/&amp;gt;&amp;lt;span &amp;gt;男&amp;lt;/span&amp;gt;&amp;lt;input type=&quot;radio&quot; name=&quot;gender&quot; value=&quot;0&quot; disabled/&amp;gt;&amp;lt;span &amp;gt;女&amp;lt;/span&amp;..." }, { "title": "计算相差的月数", "url": "/posts/jisuan-xiangcha-de-yueshu/", "categories": "Knowledge, Java", "tags": "Java", "date": "2020-10-27 05:13:00 +0000", "snippet": "public static int getMonthDiff(Date d1, Date d2) { Calendar c1 = Calendar.getInstance(); Calendar c2 = Calendar.getInstance(); c1.setTime(d1); c2.setTime(d2); int year1 = c1.get(Calendar.YEAR); int year2 = c2.get(Calendar.YEAR); int month1 = c1.get(Calendar.MONTH); int month2 = c2.get(Calendar.MO..." }, { "title": "Java中Array和List的相互转换", "url": "/posts/java-zhong-array-he-list-de-zhuanhuan/", "categories": "Knowledge, Java", "tags": "Java", "date": "2020-10-27 03:47:00 +0000", "snippet": "Array转ListString[] array = {&quot;string1&quot;, &quot;string2&quot;, &quot;string3&quot;};List&amp;lt;String&amp;gt; list = Arrays.asList(array);//Arrays.asList产生一个Arrays内置的类，其中数组用final表示// list.add(&quot;string4&quot;); 所以不能往其中添加元素for(String s : list){ System.out.println(s);}List转ArrayList&..." }, { "title": "使用Calendar类来输出年份、月份等", "url": "/posts/shiyong-calendar-huoqu-shijain/", "categories": "Knowledge, Java", "tags": "Java", "date": "2020-10-27 03:47:00 +0000", "snippet": "import java.util.Calendar;public class Main { public static void main(String[] args) { Calendar cal = Calendar.getInstance(); int day = cal.get(Calendar.DATE); int month = cal.get(Calendar.MONTH) + 1; int year = cal.get(Calendar.YEAR); int dow = cal.get(Calen..." }, { "title": "在springmvc-servlet.xml中设置上传文件的大小限制", "url": "/posts/shezhi-shangchuan-wenjian-de-daxiao/", "categories": "Knowledge, Spring", "tags": "Spring", "date": "2020-10-26 05:47:00 +0000", "snippet": "&amp;lt;bean id=&quot;multipartResolver&quot; class=&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;&amp;gt; &amp;lt;!-- 设置上传文件编码 --&amp;gt; &amp;lt;property name=&quot;defaultEncoding&quot; value=&quot;UTF-8&quot;&amp;gt;&amp;lt;/property&amp;gt; &amp;lt;!-- 设置上传..." }, { "title": "Oracle 使用SQL语句对序列的操作", "url": "/posts/xulie-caozuo/", "categories": "Knowledge, Oracle", "tags": "Oracle", "date": "2020-10-26 05:47:00 +0000", "snippet": "创建序列CREATE SEQUENCE test_seq MINVALUE 1 MAXVALUE 9999999999 START WITH 100000 INCREMENT BY 1 CACHE 20查询所有序列select * from user_sequences;查询特定序列select * from user_sequences where sequence_name like &#39;%T_SELL_BRAND%&#39;;select * from user_sequences where sequence_name = &#39;..." }, { "title": "Oracle 使用SQL创建备份表", "url": "/posts/chuangjian-beifenbiao/", "categories": "Knowledge, Oracle", "tags": "Oracle", "date": "2020-10-26 05:47:00 +0000", "snippet": "create table a_bak as select * from a;" }, { "title": "Oracle 取查询结果排序后的第一条记录", "url": "/posts/qu-paixuhou-diyitiao-shuju/", "categories": "Knowledge, Oracle", "tags": "Oracle", "date": "2020-10-26 05:47:00 +0000", "snippet": "select * from (select t.*, row_number() over(order by id) rn from test_order t) t where rn = 1;" }, { "title": "Oracle 批量删除表、视图、序列、函数", "url": "/posts/piliang-shanchu-xulie/", "categories": "Knowledge, Oracle", "tags": "Oracle", "date": "2020-10-26 05:47:00 +0000", "snippet": "网上有很多利用函数批量删除的例子，但是个人觉得有些复杂，参考Coding迷这位网友的做法，我认为比较简单。批量删除表、视图、序列、函数前，生成对应的SQL执行脚本，然后执行生成对应的脚本即可。--删除表select &#39;drop table &#39;||table_name||&#39;;&#39; as sqlscript from user_tables; -- drop tables--删除序列select &#39;drop sequence &#39; || sequence_name||&#39;;&#39; as sqlscript from user_sequen..." }, { "title": "MyBatis的xml文件中如何处理特殊字符", "url": "/posts/mybatis-zhong-de-teshu-zifu/", "categories": "Knowledge, MyBatis", "tags": "MyBatis", "date": "2020-10-26 05:47:00 +0000", "snippet": "&amp;lt;![CDATA[ 包含SQL特殊字符 ]]&amp;gt;" }, { "title": "MyBatis中使用模糊查询", "url": "/posts/mybatis-shiyong-mohu-chaxun/", "categories": "Knowledge, MyBatis", "tags": "MyBatis", "date": "2020-10-26 05:47:00 +0000", "snippet": "&amp;lt;if test=&#39;testdata != null and testdata !=&quot;&quot;&#39;&amp;gt; AND T.TEST_DATA LIKE CONCAT(CONCAT(&#39;%&#39;, #{testdata, jdbcType = VARCHAR}), &#39;%&#39;) &amp;lt;/if&amp;gt;" }, { "title": "JavaScript实现submit按钮的功能", "url": "/posts/shoudong-commit/", "categories": "Knowledge, JavaScript", "tags": "JavaScript", "date": "2020-10-26 05:47:00 +0000", "snippet": "document.forms[0].action = &quot;/demo/test/doSubmit.do?param=0&quot;;document.forms[0].method = &quot;post&quot;;document.forms[0].submit(); " }, { "title": "截图", "url": "/posts/jietu/", "categories": "Knowledge, JavaScript", "tags": "JavaScript", "date": "2020-10-26 05:47:00 +0000", "snippet": "html&amp;lt;div class=&quot;demo-container&quot;&amp;gt; &amp;lt;div id=&quot;demo&quot;&amp;gt; &amp;lt;div class=&quot;orange&quot;&amp;gt; &amp;lt;p&amp;gt;如果原来使用百分比设置元素宽高，请更改为px为单位的宽高，避免样式二次计算导致的模糊&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;如果原来使用百分比设置元素宽高，请更改为px为单位的宽高..." }, { "title": "iframe自适应高度", "url": "/posts/iframe-zishiying-gaodu/", "categories": "Knowledge, JavaScript", "tags": "JavaScript", "date": "2020-10-26 05:47:00 +0000", "snippet": "&amp;lt;iframe src=&quot;backtop.html&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; id=&quot;test&quot; οnlοad=&quot;this.height=100&quot;&amp;gt;&amp;lt;/iframe&amp;gt;&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;function reinitIframe () { var iframe = document.getElement..." }, { "title": "页面弹出框的操作", "url": "/posts/dan-chu-kuang-dong-zuo/", "categories": "Knowledge, JavaScript", "tags": "JavaScript", "date": "2020-10-26 05:47:00 +0000", "snippet": "var notice = &quot;您确认要执行该操作吗？&quot;;var flag = window.confirm(notice);if (flag) { alert(&quot;OK&quot;);} else { alert(&quot;NO&quot;);}" }, { "title": "比较时间大小", "url": "/posts/bijiao-shijian-daxiao/", "categories": "Knowledge, JavaScript", "tags": "JavaScript", "date": "2020-10-26 05:47:00 +0000", "snippet": "// 获取页面时间字符串并使用new Date()函数转换为日期格式var date_begin = new Date($(&quot;#date_begin&quot;).val().replace(&quot;-&quot;, &quot;/&quot;).replace(&quot;-&quot;, &quot;/&quot;));var date_end = new Date($(&quot;#date_end&quot;).val().replace(&quot;-&quot;, &quot;/&quot;).replace(&quot;-&quot;, &quot;/&quo..." }, { "title": "JSP页面获取Controller设置的参数", "url": "/posts/jsp-yemain-huoqu-controller-shezhi-de-canshu/", "categories": "Knowledge, JSP", "tags": "JSP", "date": "2020-10-26 05:47:00 +0000", "snippet": "在controller中设置参数request.setAttribute(&quot;param&quot;, &quot;123&quot;);在JSP页面获取该参数var param = &#39;&amp;lt;%=request.getAttribute(&quot;param&quot;)%&amp;gt;&#39;;" }, { "title": "JQuery获取元素高度不同方法的区别", "url": "/posts/jquery-huoqu-yuansu-gaodu-de-butong-fangfa/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-10-26 05:47:00 +0000", "snippet": "$ele = $(&quot;#element&quot;)$ele.height() // 纯内高height$ele.innerHeight() // height + padding$ele.outerHeight() // height + padding + border$ele.outerHeight(True) // height + padding + border + margin 参考：JQuery获取元素高度" }, { "title": "原生 JS 或 JQuery 实现父窗口传值", "url": "/posts/fuchuangkou-chuanzhi/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-10-26 05:47:00 +0000", "snippet": "做WEB前端开发的过程中，经常会有这样的需求，用户点击【编辑】按钮，弹出一个对话框，在里边修改相应的值，然后把修改后的值显示在原页面，最后点击保存。用window.parent.document.getElementById(&quot;&quot;).setAttribute(&quot;value&quot;, &quot;&quot;)可以很好的解决这个问题。父页面中的代码&amp;lt;!doctype html&amp;gt;&amp;lt;html lang=&quot;en&quot;&amp;gt; &amp;lt;head&amp;gt; &amp;..." }, { "title": "页面字段空值校验", "url": "/posts/yemian-ziduan-kongzhi-jiaoyan/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-10-26 05:47:00 +0000", "snippet": "function checkIsNull() { var flag = false; var test1 = $(&#39;input:radio[name=&quot;test1&quot;]:checked&#39;).val(); var test2 = $(&quot;#test2&quot;).val() if (test1) { flag = true; } else { alert(&quot;输入框1不能为空！&quot;); flag = false; } if (flag &amp;a..." }, { "title": "按钮置灰", "url": "/posts/anniu-zhihui/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-10-26 05:47:00 +0000", "snippet": "$(document).ready(function() { $(&quot;#button_li&quot;).click(function() { $(this).css(&quot;pointer-events&quot;, &quot;none&quot;); $(this).css(&quot;background-color&quot;, &quot;gray&quot;); });});" }, { "title": "input输入框锁定", "url": "/posts/input-shurukuang-suoding/", "categories": "Knowledge, JQuery", "tags": "JQuery", "date": "2020-10-26 05:47:00 +0000", "snippet": "$(el).find(&quot;input[name=&#39;a&#39;]&quot;).attr(&quot;style&quot;, &quot;background-color:#f6f6f6;cursor:no-drop&quot;);$(el).find(&quot;input[name=&#39;a&#39;]&quot;).attr(&quot;readonly&quot;, &quot;readonly&quot;);$(el).find(&quot;input[name=&#39;a&#39;]&quot;).attr(&quot;onclick&quot;, &..." }, { "title": "EL表达式判断字符串相等（eq）和不相等（ne）", "url": "/posts/el-panduan-xiangdeng-buxiangdeng/", "categories": "Knowledge, EL", "tags": "EL", "date": "2020-10-26 05:47:00 +0000", "snippet": "&amp;lt;td class=&quot;t1&quot;&amp;gt; &amp;lt;input type=&quot;hidden&quot; class=&quot;name&quot; value=&quot;${name}&quot;&amp;gt; &amp;lt;a class=&quot;c-link fb delete-btn&quot;&amp;gt;删除&amp;lt;/a&amp;gt; &amp;lt;a class=&quot;c-link fb ml10&quot;&amp;gt;记录&amp;lt;/a&amp;gt; &amp;lt;!-..." }, { "title": "EL表达式标签判断参数是否为空", "url": "/posts/el-panduan-canshu-shifou-weikong/", "categories": "Knowledge, EL", "tags": "EL", "date": "2020-10-26 05:47:00 +0000", "snippet": "&amp;lt;c:if test=&quot;${empty str}&quot;&amp;gt; str为空 &amp;lt;/c:if&amp;gt;&amp;lt;c:if test=&quot;${not empty str}&quot;&amp;gt; str不为空 &amp;lt;/c:if&amp;gt;" }, { "title": "DOS命令集", "url": "/posts/dos-mingling-ji/", "categories": "Knowledge, DOS", "tags": "DOS", "date": "2020-10-26 05:47:00 +0000", "snippet": ". C:\\DocumentsandSettings\\用户名所在文件夹 .. C:\\DocumentsandSettings ... 我的电脑 \\ C盘 C:/windows/fonts 字体cmd /k systeminfo 查询系统信息OSK 屏幕键盘" }, { "title": "选择器的优先级", "url": "/posts/xuanzeqi-de-youxianji/", "categories": "Knowledge, CSS", "tags": "CSS", "date": "2020-10-26 05:47:00 +0000", "snippet": "1.最高优先级是 （直接在标签中的设置样式） &amp;lt;div style=&quot;color:Red;&quot;&amp;gt;&amp;lt;/div&amp;gt;2.次优先级是（ID选择器 ,假设级别为100） #myDiv{color:Red;}3.其次优先级是（类选择器，假设级别为10） .divClass{color:Red;}4.最后优先级是 （标签选择器，假设级别是1） div{color:Red;}" }, { "title": "使用CSS设置textarea不可拖动", "url": "/posts/shezhi-textarea-buke-tuodong/", "categories": "Knowledge, CSS", "tags": "CSS", "date": "2020-10-26 05:47:00 +0000", "snippet": "默认情况下，我们将鼠标移动到&amp;lt;textarea&amp;gt;的右下角时发现文本域是可以通过拖动的方式改变其大小的，这会影响我们原本的页面布局。若想设置其不可拖动，可为其添加如下属性：&amp;lt;textarea style=&quot;resize:none;&quot;&amp;gt;&amp;lt;/textarea&amp;gt;" }, { "title": "使用Jekyll部署自己的博客", "url": "/posts/jekyll-anzhuang/", "categories": "Index, Jekyll", "tags": "Jekyll, Learning", "date": "2019-08-10 16:34:00 +0000", "snippet": "首先，罗列几个好看的博客 友人C 纯洁的微笑然后是几款博客主题 Typecho的主题：未命名 DEFAULT小改模板，预览：未命名 Wordpress的主题：smarty_hankin，预览：hankin原理使用Jekyll将Markdown编写的博客生成HTML文件，也就是静态的网页，部署到GitHub上，使用GitHub提供的GitHub Pages功能来运行展示自己的博客，无需自己的数据库和服务器。安装Ruby环境需要在Ruby环境下才可以运行Jekyll，所有首先要安装Ruby环境。根据自己的操作系统下载Ruby的安装包 https://rubyinstaller.org..." }, { "title": "Customize the Favicon", "url": "/posts/customize-the-favicon/", "categories": "Index, Jekyll", "tags": "Jekyll", "date": "2019-08-10 16:34:00 +0000", "snippet": "In Chirpy, the image files of Favicons are placed in assets/img/favicons/. You may need to replace them with your own. So let’s see how to customize these Favicons.With a square image (PNG, JPG or GIF) in hand, open the site Favicon &amp;amp; App Icon Generator and upload your original image.Clic..." }, { "title": "Getting Started", "url": "/posts/getting-started/", "categories": "Index, Jekyll", "tags": "Jekyll", "date": "2019-08-09 12:55:00 +0000", "snippet": "InstallationFork Chirpy on GitHub, rename the repository to USERNAME.github.io (where USERNAME is your GitHub username), and then open terminal and clone the fork to local by:$ git clone https://github.com/USERNAME/USERNAME.github.io.git -b master --single-branchSetting up the local envrionmentIf..." }, { "title": "Writing a New Post", "url": "/posts/write-a-new-post/", "categories": "Index, Jekyll", "tags": "Jekyll", "date": "2019-08-08 06:10:00 +0000", "snippet": "Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _post/ of the root directory. Please note that the EXTENSION must be one of md and markdown. From v2.4.1, you can create sub-directories under _posts/ to categorize posts.Front MatterBasically, you need to fill th..." }, { "title": "Text and Typography", "url": "/posts/text-and-typography/", "categories": "Index, Jekyll", "tags": "Jekyll", "date": "2019-08-08 03:33:00 +0000", "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.TitlesH1H2H3H4ParagraphI wandered lonely as a cloudThat floats on high o’er vales and hills,When all at once I saw a crowd,A host, of golden daff..." } ]
